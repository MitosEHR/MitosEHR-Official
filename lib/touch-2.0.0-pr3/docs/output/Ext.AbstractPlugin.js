Ext.data.JsonP.Ext_AbstractPlugin({"tagname":"class","singleton":false,"statics":{"cfg":[],"property":[],"event":[],"method":[],"css_var":[],"css_mixin":[]},"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/AbstractPlugin.html#Ext-AbstractPlugin' target='_blank'>AbstractPlugin.js</a></div></pre><div class='doc-contents'><p>The AbstractPlugin class is the base class from which user-implemented plugins should inherit.</p>\n\n\n<p>This class defines the essential API of plugins as used by Components by defining the following methods:</p>\n\n\n<ul>\n<li><code>init</code> : The plugin initialization method which the owning Component calls at Component initialization\ntime.<div class=\"sub-desc\"><p>The Component passes itself as the sole parameter.</p><p>Subclasses should set up bidirectional\nlinks between the plugin and its client Component here.</p></div></li>\n<li><code>destroy</code> : The plugin cleanup method which the owning Component calls at Component destruction time.<div class=\"sub-desc\">Use\nthis method to break links between the plugin and the Component and to free any allocated resources.</div></li>\n<li><code>enable</code> : The base implementation just sets the plugin's <code>disabled</code> flag to <code>false</code><div class=\"sub-desc\"></div></li>\n<li><code>disable</code> : The base implementation just sets the plugin's <code>disabled</code> flag to <code>true</code><div class=\"sub-desc\"></div></li>\n</ul>\n\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-destroy' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.AbstractPlugin'>Ext.AbstractPlugin</span><br/><a href='source/AbstractPlugin.html#Ext-AbstractPlugin-method-destroy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractPlugin-method-destroy' class='name expandable'>destroy</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>The destroy method is invoked by the owning Component at the time the Component is being destroyed. ...</div><div class='long'><p>The destroy method is invoked by the owning Component at the time the Component is being destroyed.</p>\n\n\n<p>The supplied implementation is empty. Subclasses should perform plugin cleanup in their own implementation of this method.</p>\n\n</div></div></div><div id='method-disable' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.AbstractPlugin'>Ext.AbstractPlugin</span><br/><a href='source/AbstractPlugin.html#Ext-AbstractPlugin-method-disable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractPlugin-method-disable' class='name expandable'>disable</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>The base implementation just sets the plugin's disabled flag to true\n\n\nPlugin subclasses which need more complex proc...</div><div class='long'><p>The base implementation just sets the plugin's <code>disabled</code> flag to <code>true</code></p>\n\n\n<p>Plugin subclasses which need more complex processing may implement an overriding implementation.</p>\n\n</div></div></div><div id='method-enable' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.AbstractPlugin'>Ext.AbstractPlugin</span><br/><a href='source/AbstractPlugin.html#Ext-AbstractPlugin-method-enable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractPlugin-method-enable' class='name expandable'>enable</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>The base implementation just sets the plugin's disabled flag to false\n\n\nPlugin subclasses which need more complex pro...</div><div class='long'><p>The base implementation just sets the plugin's <code>disabled</code> flag to <code>false</code></p>\n\n\n<p>Plugin subclasses which need more complex processing may implement an overriding implementation.</p>\n\n</div></div></div><div id='method-init' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.AbstractPlugin'>Ext.AbstractPlugin</span><br/><a href='source/AbstractPlugin.html#Ext-AbstractPlugin-method-init' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractPlugin-method-init' class='name expandable'>init</a>( <span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> client</span> )</div><div class='description'><div class='short'>The init method is invoked after initComponent method has been run for the client Component. ...</div><div class='long'><p>The init method is invoked after initComponent method has been run for the client Component.</p>\n\n\n<p>The supplied implementation is empty. Subclasses should perform plugin initialization, and set up bidirectional\nlinks between the plugin and its client Component in their own implementation of this method.</p>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>client</span> : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a><div class='sub-desc'><p>The client Component which owns this plugin.</p>\n</div></li></ul></div></div></div></div></div></div></div>","mixedInto":[],"uses":[],"code_type":"ext_define","allMixins":[],"superclasses":[],"mixins":[],"inheritable":false,"inheritdoc":null,"meta":{},"members":{"cfg":[],"property":[],"event":[],"css_var":[],"method":[{"tagname":"method","owner":"Ext.AbstractPlugin","meta":{},"name":"destroy","id":"method-destroy"},{"tagname":"method","owner":"Ext.AbstractPlugin","meta":{},"name":"disable","id":"method-disable"},{"tagname":"method","owner":"Ext.AbstractPlugin","meta":{},"name":"enable","id":"method-enable"},{"tagname":"method","owner":"Ext.AbstractPlugin","meta":{},"name":"init","id":"method-init"}],"css_mixin":[]},"private":false,"name":"Ext.AbstractPlugin","aliases":{},"subclasses":[],"extends":null,"requires":[],"id":"class-Ext.AbstractPlugin","component":false,"alternateClassNames":[],"files":[{"href":"AbstractPlugin.html#Ext-AbstractPlugin","filename":"AbstractPlugin.js"}]});