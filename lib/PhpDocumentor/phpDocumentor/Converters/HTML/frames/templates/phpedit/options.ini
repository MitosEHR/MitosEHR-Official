preservedocbooktags = false

;; used to highlight the {@source} inline tag, @filesource tag, and @example tag
[highlightSourceTokens]
;; format:
;; T_CONSTANTNAME = open
;; /T_CONSTANTNAME = close
T_ABSTRACT = <font color="blue">
/T_ABSTRACT = </font>
T_CLONE = <font color="blue">
/T_CLONE = </font>
T_HALT_COMPILER = <font color="red">
/T_HALT_COMPILER = </font>
T_PUBLIC = <font color="blue">
/T_PUBLIC = </font>
T_PRIVATE = <font color="blue">
/T_PRIVATE = </font>
T_PROTECTED = <font color="blue">
/T_PROTECTED = </font>
T_FINAL = <font color="blue">
/T_FINAL = </font>
T_IMPLEMENTS = <font color="blue">
/T_IMPLEMENTS = </font>
T_CLASS = <font color="blue">
/T_CLASS = </font>
T_INTERFACE = <font color="blue">
/T_INTERFACE = </font>
T_INCLUDE = <font color="blue">
/T_INCLUDE = </font>
T_INCLUDE_ONCE = <font color="blue">
/T_INCLUDE_ONCE = </font>
T_REQUIRE_ONCE = <font color="blue">
/T_REQUIRE_ONCE = </font>
T_FUNCTION = <font color="blue">
/T_FUNCTION = </font>
T_VARIABLE = <strong>
/T_VARIABLE = </strong>
T_CONSTANT_ENCAPSED_STRING = <font color="#66cccc">
/T_CONSTANT_ENCAPSED_STRING = </font>
T_COMMENT = <font color="green">
/T_COMMENT = </font>
T_OBJECT_OPERATOR = <strong>
/T_OBJECT_OPERATOR = </strong>
T_RETURN = <font color="blue">
/T_RETURN = </font>
T_STATIC = <font color="blue">
/T_STATIC = </font>
T_SWITCH = <font color="blue">
/T_SWITCH = </font>
T_IF = <font color="blue">
/T_IF = </font>
T_FOREACH = <font color="blue">
/T_FOREACH = </font>
T_FOR = <font color="blue">
/T_FOR = </font>
T_VAR = <font color="blue">
/T_VAR = </font>
T_EXTENDS = <font color="blue">
/T_EXTENDS = </font>
T_RETURN = <font color="blue">
/T_RETURN = </font>
T_GLOBAL = <font color="blue">
/T_GLOBAL = </font>
T_DOUBLE_COLON = <strong>
/T_DOUBLE_COLON = </strong>
T_OBJECT_OPERATOR = <strong>
/T_OBJECT_OPERATOR = </strong>
T_OPEN_TAG = <strong>
/T_OPEN_TAG = </strong>
T_CLOSE_TAG = <strong>
/T_CLOSE_TAG = </strong>

[highlightSource]
;; this is for highlighting things that aren't tokens like "&"
;; format:
;; word = open
;; /word = close
@ = <strong>
/@ = </strong>
& = <strong>
/& = </strong>
[ = <strong>
/[ = </strong>
] = <strong>
/] = </strong>
! = <strong>
/! = </strong>
";" = <strong>
/; = </strong>
( = <strong>
/( = </strong>
) = <strong>
/) = </strong>
, = <strong>
/, = </strong>
{ = <strong>
/{ = </strong>
} = <strong>
/} = </strong>
""" = <font color="#66cccc">
/" = </font>

[highlightDocBlockSourceTokens]
;; this is for docblock tokens, using by phpDocumentor_HighlightParser
;; tagphptype is for "string" in @param string description, for example
docblock = <font color="#009999">
/docblock = </font>
tagphptype = <em>
/tagphptype = </em>
tagvarname = <strong>
/tagvarname = </strong>
coretag = <strong><font color = "#0099FF">
/coretag = </font></strong>
tag = <strong><font color="#009999">
/tag = </font></strong>
inlinetag = <em><font color="#0099FF">
/inlinetag = </font></em>
internal = <em><font color = "#6699cc">
/internal = </font></em>
closetemplate = <strong><font color="blue">
/closetemplate = </font></strong>
docblocktemplate = <font color="blue">
/docblocktemplate = </font color="blue">

[highlightTutorialSourceTokens]
;; this is for XML DocBook-based tutorials, highlighted by phpDocumentor_TutorialHighlightParser
;; <tag>
opentag = <span class="tute-tag">
/opentag = </span>
;; </tag>
closetag = <span class="tute-tag">
/closetag = </span>
;; <tag attribute="value">
attribute = <span class="tute-attribute-name">
/attribute = </span>
;; <tag attribute="value">
attributevalue = <span class="tute-attribute-value">
/attributevalue = </span>
;; &entity;
entity = <span class="tute-entity">
/entity = </span>
;; <!-- comment -->
comment = <span class="tute-comment">
/comment = </span>
;; {@inline tag}
itag = <span class="tute-inline-tag">
/itag = </span>

;; used for translation of html in DocBlocks
[desctranslate]
ul = <ul>
/ul = </ul>
ol = <ol>
/ol = </ol>
li = <li>
/li = </li>
code = 
/code = 
var = <var>
/var = </var>
samp = <samp>
/samp = </samp>
kbd = <kbd>
/kbd = </kbd>
pre = <pre>
/pre = </pre>
p = <p>
/p = </p>
b = <strong>
/b = </strong>
i = <em>
/i = </em>
br = <br />

[ppage]
;; this is the DocBook package page translation section.  All DocBook tags
;; that have a corresponding html tag must be listed here
;;
;; examples:
;; 1)
;; tagname = newtagname
;;
;; This is the simplest case, where all attributes will be added into the
;; starting tag and the ending tag will be html/xml style </tranlatedtagname>
;; <tagname></tagname> becomes <newtagname></newtagname> and
;; <tagname attr="value"></tagname> becomes
;; <newtagname attr="value"></newtagname>
;;
;; 2)
;; tagname = newtagname
;; tagname->attr = newattrname
;;
;; in this case, everything will be like the first case, except tags like:
;; <tagname attr="value"></tagname> will become
;; <newtagname newattrname="value"></newtagname>
;;
;; 3)
;; tagname = newtagname
;; tagname->attr = newattrname
;; tagname->attr+value = newvalue
;;
;; in this case, the value is also translated to another.  This can be useful
;; for instances such as focus="middle" changing to align="center" or something
;; of that nature.
;; <tagname attr="value"></tagname> will become
;; <newtagname newattrname="newvalue"></newtagname>
;;
;; 4)
;; tagname = newtagname
;; tagname->attr1 = newattrname
;; tagname->attr2 = newattrname
;; tagname->attr1+value|attr2+value = newvalue
;;
;; in this case, two attributes combine to make one new attribute, and the combined
;; value is translated into a new value
;; <tagname attr1="value1" attr2="value2"></tagname> will become
;; <newtagname newattrname="newvalue"></newtagname>
;;
;; 5)
;; tagname = newtagname
;; tagname!attr = dummy
;;
;; here, the attribute will be ignored.  dummy is not used and may be any value
;; <tagname attr="value"></tagname> will become
;; <newtagname></newtagname>
;;
;; 6)
;; tagname = newtagname
;; tagname! = dummy
;;
;; here, all attributes will be ignored.  dummy is not used and may be any value
;; <tagname attr1="value" attr2="foo"></tagname> will become
;; <newtagname></newtagname>
;;
;; 7)
;; tagname = newtagname
;; tagname/ = 1
;;
;; here, the tag will be translated as a single tag with no closing tag, and all
;; attributes
;; <tagname attr="val">{text text}</tagname> will become
;; <newtagname attr="val" />
;;
;; 8)
;; tagname = <starttaginfo />
;; /tagname = closetagtext
;;
;; in this case, the text <starttaginfo> will be inserted exactly as entered for
;; <tagname> and closetagtext for </tagname>
;; <tagname attr="val"></tagname> will become
;; <starttaginfo />closetagtext
;;
;; 9)
;; $attr$my_attribute = newattrname
;;
;; tagname = newtagname
;;
;; in this case, all occurences of my_attribute in any tag will be changed to
;; newattrname.  This is useful for changing things like role="php" to
;; class="php," for example.  Note that the text "$attr$" MUST be on the line
;; start for phpDocumentor to recognize it.
;;
;; 10)
;; &entity; = translation text
;; &quot; = &quot;
;; &quot; = """
;; &lt; = <
;;
;; Use this to control translation of entities to their appropriate values

&nbsp; = &nbsp;
&quot; = &quot;
&rdquo; = &rdquo;
&ldquo; = &ldquo;
&amp; = &amp;
&lt; = &lt;
&gt; = &gt;
&copy; = &copy;

$attr$role = class

abbrev = abbr

blockquote = blockquote

arg = span
arg->choice = class

author = <font size="-1"><strong>by <em>
/author = </em></strong></font>
author! = 0

authorblurb = blockquote

authorgroup = <strong>Authors:</strong><br />
/authorgroup = 
authorgroup! = 0

caution = <table border="1"><th align="center">Caution</th><tr><td>
/caution = </td></tr></table>
caution! = 0

command = <b class="cmd">
/command = </b>

cmdsynopsis = <div id="cmdsynopsis">
/cmdsynopsis = </div>

copyright = <em>
/copyright = </em><br />

emphasis = strong

example = <table class="src-code" width="100%" border="1"><tr><td>
/example = </td></tr></table>
example! = 0

function =
/function = ()

formalpara = p

graphic = img
graphic->fileref = src
graphic/ =

important = u

informalequation = blockquote

informalexample = pre

inlineequation = em

itemizedlist = ul

listitem = li

literal = code

literallayout = pre

option = " "
/option = 

orderedlist = ol

para = p

programlisting = <table border="0" bgcolor="#E0E0E0" cellpadding="5"><tr><td><div class="src-code">
/programlisting = </div></td></tr></table>
programlisting! = 0

refentry = div

refnamediv = <div class="refname">
/refnamediv = </div>
refnamediv! = 0

refname = h1

refpurpose = <h2 class="refpurpose"><em>
/refpurpose = </em></h2>

refsynopsisdiv = <div class="refsynopsis">
/refsynopsisdiv = </div>
refsynopsisdiv! = 0

refsect1 = span

refsect2 = 
/refsect2 = <hr />

refsect3 = 
/refsect3 = <br />

releaseinfo = (
/releaseinfo = )<br />

simpara = 
/simpara = <br />
simpara! = 0

subscript = sub

superscript = super

table = table

table->colsep = rules
table->rowsep = rules
table->colsep+1|rowsep+1 = all
table->colsep+1|rowsep+0 = cols
table->colsep+0|rowsep+1 = rows

table->frame = frame
table->frame+all = border
table->frame+none = void
table->frame+sides = vsides
table->frame+top = above
table->frame+topbot = hsides

thead = thead

tfoot = tfoot

tbody = tbody

colspec = col

tgroup = colgroup
tgroup/ = 1
tgroup->cols = span

row = tr

entry = td
entry->morerows = colspan
entry->morerows+1 = 2
entry->morerows+2 = 3
entry->morerows+3 = 4
entry->morerows+4 = 5
entry->morerows+5 = 6
entry->morerows+6 = 7
entry->morerows+7 = 8
entry->morerows+8 = 9
entry->morerows+9 = 10
entry->morerows+10 = 11
;; add more if you need more colspans

warning = <table border="1"><tr><td>
/warning = </td></tr></table>
warning! = 0

;; now begins the attributes that should be tags in cdata
[$attr$id]
open = a
;close = /a
cdata! = true
quotevalues = true
separator = "="
;separateall = true
$id = name

;; now begins the sections that deal with <title>
[refsynopsisdiv_title]
;tag_attr = true
;attr_name = title
cdata_start = true
;cdata_end = true
open = <h1 class="title" align="center">
close = </h1>

[refsect1_title]
;tag_attr = true
;attr_name = title
cdata_start = true
;cdata_end = true
open = <h2 class="title" align="center">
close = </h1>

[refsect2_title]
;tag_attr = true
;attr_name = title
cdata_start = true
;cdata_end = true
open = <h2 class="title" align="center">
close = </h2>

[refsect3_title]
;tag_attr = true
;attr_name = title
cdata_start = true
;cdata_end = true
open = <h3 class="title" align="center">
close = </h3>

[para_title]
;tag_attr = true
;attr_name = title
cdata_start = true
;cdata_end = true
open = <strong class="title" align="center">
close = </strong>

[formalpara_title]
;tag_attr = true
;attr_name = title
cdata_start = true
;cdata_end = true
open = <strong class="title" align="center">
close = </strong>

[example_title]
;tag_attr = true
;attr_name = title
;cdata_start = true
cdata_end = true
open = </td></tr><tr><td><strong>
close = </strong>

[table_title]
;tag_attr = true
;attr_name = true
cdata_start = true
open = <caption>
close = </caption>
