#!/bin/sh
if [ -z "$PHP" ]; then
   PHP=`which php`
fi
(exec $PHP -C -q -d output_buffering=1 "$0" "$@") 2>/dev/null
if [ "$?" -ne "0" ]; then
	echo "FAILED:  Bad environment variable \$PHP (set to \"$PHP\")"
	exit 1
fi
exit 0
<?php
/**
 * PHP auto documentor, like javadoc
 * If you get an error uses this as a shell script then its been dosified
 *
 * phpDocumentor :: automatic documentation generator
 *
 * PHP versions 4 and 5
 *
 * Copyright (c) 2001-2007 Gregory Beaver
 *
 * LICENSE:
 *
 * This library is free software; you can redistribute it
 * and/or modify it under the terms of the GNU Lesser General
 * Public License as published by the Free Software Foundation;
 * either version 2.1 of the License, or (at your option) any
 * later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 *
 * @category  ToolsAndUtilities
 * @package   phpDocumentor
 * @author    Joshua Eichorn <jeichorn@phpdoc.org>
 * @copyright 2000-2007 Joshua Eichorn
 * @license   http://www.opensource.org/licenses/lgpl-license.php LGPL
 * @filesource
 * @link      http://www.phpdoc.org
 * @link      http://pear.php.net/PhpDocumentor
 * @todo      CS cleanup - change package to PhpDocumentor
 */

ob_end_clean(); // make output from autofind php code disapear

/**
 * utility: determine whether we're in PEAR or not
 * @internal CS Exception- logic here necessitates using an unconditional "include"
 */
$test = @include "phpDocumentor/find_phpdoc.php";
if ($test == 6) { 
    // find_phpdoc.php returns 6
    include "phpDocumentor/phpdoc.inc";
} else {
    echo "Error: phpDocumentor not found" . PHP_EOL;
}
?>
