<refentry id="{@id}">
 <refnamediv>
  <refname>@abstract</refname>
  <refpurpose>Document an abstract class or method</refpurpose>
 </refnamediv>
 <refsynopsisdiv>
  <refsynopsisdivinfo>
   <author>
    Gregory Beaver
    <authorblurb>Tag Documentation written by {@link mailto:cellog@php.net cellog@php.net}</authorblurb>
   </author>
   <author>
    Chuck Burgess
    <authorblurb>Edited by {@link mailto:ashnazg@php.net ashnazg@php.net}
    </authorblurb>
   </author>
   <copyright>Copyright 2002, Gregory Beaver</copyright>
   <releaseinfo>phpDocumentor 1.1+</releaseinfo>
  </refsynopsisdivinfo>
  <cmdsynopsis>
    <command>@abstract</command>
   </cmdsynopsis>
 </refsynopsisdiv>
 <refsect1 id="{@id description}">
  <title>Description</title>
  <para>Use the @abstract tag to declare a class as abstract, as well as for declaring what methods must be redefined in a child class.</para>
  <warning>The @abstract tag is only valid in PHP 4, PHP 5 has a keyword abstract.</warning>
 </refsect1>
 <refsect1 id="{@id example}">
  <title>Example</title>
  <para>Here's an example:</para>
  <para>
   <programlisting role="php">
   <![CDATA[
/**
 * example of @abstract usage in a class
 *
 * if even one method is declared abstract,
 * then the class itself should be also
 * @abstract
 */
class myAbstractClass
{
   /**
    * this method is abstract...
    * it has no body...
    * @abstract
    */
   function function1($baz) 
   {
       // no body
   }

   /**
    * this method is not abstract
    */   
   function function2()
   {
       // does something
       ...
   }
}
   ]]>
   </programlisting>
  </para>
 </refsect1>
</refentry>