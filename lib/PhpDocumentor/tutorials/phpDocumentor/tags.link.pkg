<refentry id="{@id}">
 <refnamediv>
  <refname>@link</refname>
  <refpurpose>Display a hyperlink to a URL in the documentation</refpurpose>
 </refnamediv>
 <refsynopsisdiv>
  <refsynopsisdivinfo>
   <author>
    Gregory Beaver
    <authorblurb>Tag Documentation written by {@link mailto:cellog@php.net cellog@php.net}</authorblurb>
   </author>
   <copyright>Copyright 2002, Gregory Beaver</copyright>
   <releaseinfo>phpDocumentor 0.1+</releaseinfo>
  </refsynopsisdivinfo>
  <cmdsynopsis>
    <command>@link</command>
    <arg choice="req">
     <option>URL</option>
    </arg>
    <arg choice="opt">
     <option>link text</option>
    </arg>
   </cmdsynopsis>
  <cmdsynopsis>
    <command>@link</command>
    <arg choice="req">
     <option>URL, URL, URL...</option>
    </arg>
   </cmdsynopsis>
 </refsynopsisdiv>
 <refsect1 id="{@id description}">
  <title>Description</title>
  <para>You may use the @link tag to document any element (include, page, class, function, define, method, variable).  The guidelines for giving the element name to @link are the same as outlined in the {@tutorial tags.see.pkg} manual page.</para>
  <caution>Unless linking to an element, @link assumes the arguments passed are fully-formed URLs.  Generally speaking, if you want to link to an element's documentation, use {@tutorial tags.see.pkg} or {@tutorial tags.inlinelink.pkg}...  you can use @link, but the other options are better.</caution>
  <para>URL is any valid Uniform Resource Locator (http://www.example.com, telnet://example.com, ftp://ftp.example.com, mailto:email@example.com, etc.)</para>
  <para>Note that as of version 1.2.0, it is possible to specify a short description for the link to use as the link text instead of the URL.</para>
 </refsect1>
 <refsect1 id="{@id example}">
  <title>Example</title>
  <para>Here's an example:</para>
  <para>
   <programlisting role="php">
   <![CDATA[
/**
 * Displays <a href="http://www.example.com">http://www.example.com</a>
 * @link http://www.example.com
 */
define("TEST_CONSTANT",3);
/**
 * Displays <a href="http://www.example.com">Hello</a>
 * @link http://www.example.com Hello
 */
define("TEST_CONSTANT2",3);
/**
 * You SHOULD use @see here instead of @link, but here's how it works:
 * displays <a href="./MyDocs/MyPackage/MyClass.html">MyClass</a>
 * @link MyClass
 */
define("TEST_CONSTANT3",3);
   ]]>
   </programlisting>
  </para>
 </refsect1>
</refentry>