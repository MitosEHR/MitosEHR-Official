/*!
 * Extensible 1.5.0
 * Copyright(c) 2010-2011 Extensible, LLC
 * licensing@ext.ensible.com
 * http://ext.ensible.com
 */
/*!
 * Extensible 1.5.0
 * Copyright(c) 2010-2011 Extensible, LLC
 * licensing@ext.ensible.com
 * http://ext.ensible.com
 */
Ôªø/**
 * Serbian Cyrillic Translation
 * by ƒåolovic Vladan (cyrillic, utf8 encoding)
 * sr_RS (ex: sr_CS, sr_YU)
 * 12 May 2007
 */
Ext.onReady(function() {
    if(Ext.Updater) {
        Ext.Updater.defaults.indicatorText = '<div class="loading-indicator">–£—á–∏—Ç–∞–≤–∞–º...</div>';
    }

    if(Ext.view.View){
       Ext.view.View.prototype.emptyText = "";
    }

    if(Ext.grid.Panel){
       Ext.grid.Panel.prototype.ddText = "{0} –∏–∑–∞–±—Ä–∞–Ω–∏—Ö —Ä–µ–¥–æ–≤–∞";
    }

    if(Ext.TabPanelItem){
       Ext.TabPanelItem.prototype.closeText = "–ó–∞—Ç–≤–æ—Ä–∏ –æ–≤—É ¬ª–∫–∞—Ä—Ç–∏—Ü—É¬´";
    }

    if(Ext.form.field.Base){
       Ext.form.field.Base.prototype.invalidText = "–£–Ω–µ—à–µ–Ω–∞ –≤—Ä–µ–¥–Ω–æ—?—Ç –Ω–∏—ò–µ –ø—Ä–∞–≤–∏–ª–Ω–∞";
    }

    if(Ext.LoadMask){
        Ext.LoadMask.prototype.msg = "–£—á–∏—Ç–∞–≤–∞–º...";
    }

    if(Ext.Date) {
        Ext.Date.monthNames = [
           "–à–∞–Ω—É–∞—Ä",
           "–§–µ–±—Ä—É–∞—Ä",
           "–ú–∞—Ä—Ç",
           "–?–ø—Ä–∏–ª",
           "–ú–∞—ò",
           "–à—É–Ω",
           "–à—É–ª",
           "–?–≤–≥—É—?—Ç",
           "–°–µ–ø—Ç–µ–º–±–∞—Ä",
           "–û–∫—Ç–æ–±–∞—Ä",
           "–?–æ–≤–µ–º–±–∞—Ä",
           "–î–µ—Ü–µ–º–±–∞—Ä"
        ];

        Ext.Date.dayNames = [
           "–?–µ–¥–µ—ô–∞",
           "–ü–æ–Ω–µ–¥–µ—ô–∞–∫",
           "–£—Ç–æ—Ä–∞–∫",
           "–°—Ä–µ–¥–∞",
           "–ß–µ—Ç–≤—Ä—Ç–∞–∫",
           "–ü–µ—Ç–∞–∫",
           "–°—É–±–æ—Ç–∞"
        ];
    }

    if(Ext.MessageBox){
       Ext.MessageBox.buttonText = {
          ok     : "–£ —Ä–µ–¥—É",
          cancel : "–û–¥—É—?—Ç–∞–Ω–∏",
          yes    : "–î–∞",
          no     : "–?–µ"
       };
    }

    if(Ext.util.Format){
        Ext.apply(Ext.util.Format, {
            thousandSeparator: '.',
            decimalSeparator: ',',
            currencySign: '\u0414\u0438\u043d\u002e',  // Serbian Dinar
            dateFormat: 'd.m.Y'
        });
    }

    if(Ext.picker.Date){
       Ext.apply(Ext.picker.Date.prototype, {
          todayText         : "–î–∞–Ω–∞—?",
          minText           : "–î–∞—Ç—É–º —ò–µ –∏—?–ø—Ä–µ–¥ –Ω–∞—ò–º–∞—ö–µ–≥ –¥–æ–∑–≤–æ—ô–µ–Ω–æ–≥ –¥–∞—Ç—É–º–∞",
          maxText           : "–î–∞—Ç—É–º —ò–µ –Ω–∞–∫–æ–Ω –Ω–∞—ò–≤–µ—õ–µ–≥ –¥–æ–∑–≤–æ—ô–µ–Ω–æ–≥ –¥–∞—Ç—É–º–∞",
          disabledDaysText  : "",
          disabledDatesText : "",
          monthNames	: Ext.Date.monthNames,
          dayNames		: Ext.Date.dayNames,
          nextText          : '–°–ª–µ–¥–µ—õ–∏ –º–µ—?–µ—Ü (Control+–î–µ—?–Ω–æ)',
          prevText          : '–ü—Ä–µ—Ç—Ö–æ–¥–Ω–∏ –º–µ—?–µ—Ü (Control+–õ–µ–≤–æ)',
          monthYearText     : '–ò–∑–∞–±–µ—Ä–∏—Ç–µ –º–µ—?–µ—Ü (Control+–ì–æ—Ä–µ/–î–æ–ª–µ –∑–∞ –∏–∑–±–æ—Ä –≥–æ–¥–∏–Ω–µ)',
          todayTip          : "{0} (–†–∞–∑–º–∞–∫–Ω–∏—Ü–∞)",
          format            : "d.m.y",
          startDay 		 : 1
       });
    }

    if(Ext.toolbar.Paging){
       Ext.apply(Ext.PagingToolbar.prototype, {
          beforePageText : "–°—Ç—Ä–∞–Ω–∞",
          afterPageText  : "–æ–¥ {0}",
          firstText      : "–ü—Ä–≤–∞ —?—Ç—Ä–∞–Ω–∞",
          prevText       : "–ü—Ä–µ—Ç—Ö–æ–¥–Ω–∞ —?—Ç—Ä–∞–Ω–∞",
          nextText       : "–°–ª–µ–¥–µ—õ–∞ —?—Ç—Ä–∞–Ω–∞",
          lastText       : "–ü–æ—?–ª–µ–¥—ö–∞ —?—Ç—Ä–∞–Ω–∞",
          refreshText    : "–û—?–≤–µ–∂–∏",
          displayMsg     : "–ü—Ä–∏–∫–∞–∑–∞–Ω–∞ {0} - {1} –æ–¥ {2}",
          emptyMsg       : '–?–µ–º–∞–º —à—Ç–∞ –ø—Ä–∏–∫–∞–∑–∞—Ç–∏'
       });
    }

    if(Ext.form.field.Text){
       Ext.apply(Ext.form.field.Text.prototype, {
          minLengthText : "–ú–∏–Ω–∏–º–∞–ª–Ω–∞ –¥—É–∂–∏–Ω–∞ –æ–≤–æ–≥ –ø–æ—ô–∞ —ò–µ {0}",
          maxLengthText : "–ú–∞–∫—?–∏–º–∞–ª–Ω–∞ –¥—É–∂–∏–Ω–∞ –æ–≤–æ–≥ –ø–æ—ô–∞ —ò–µ {0}",
          blankText     : "–ü–æ—ô–µ —ò–µ –æ–±–∞–≤–µ–∑–Ω–æ",
          regexText     : "",
          emptyText     : null
       });
    }

    if(Ext.form.field.Number){
       Ext.apply(Ext.form.field.Number.prototype, {
          minText : "–ú–∏–Ω–∏–º–∞–ª–Ω–∞ –≤—Ä–µ–¥–Ω–æ—?—Ç —É –ø–æ—ô—É —ò–µ {0}",
          maxText : "–ú–∞–∫—?–∏–º–∞–ª–Ω–∞ –≤—Ä–µ–¥–Ω–æ—?—Ç —É –ø–æ—ô—É —ò–µ {0}",
          nanText : "{0} –Ω–∏—ò–µ –ø—Ä–∞–≤–∏–ª–∞–Ω –±—Ä–æ—ò"
       });
    }

    if(Ext.form.field.Date){
       Ext.apply(Ext.form.field.Date.prototype, {
          disabledDaysText  : "–ü–∞—?–∏–≤–Ω–æ",
          disabledDatesText : "–ü–∞—?–∏–≤–Ω–æ",
          minText           : "–î–∞—Ç—É–º —É –æ–≤–æ–º –ø–æ—ô—É –º–æ—Ä–∞ –±–∏—Ç–∏ –Ω–∞–∫–æ–Ω {0}",
          maxText           : "–î–∞—Ç—É–º —É –æ–≤–æ–º –ø–æ—ô—É –º–æ—Ä–∞ –±–∏—Ç–∏ –ø—Ä–µ {0}",
          invalidText       : "{0} –Ω–∏—ò–µ –ø—Ä–∞–≤–∏–ª–∞–Ω –¥–∞—Ç—É–º - –∑–∞—Ö—Ç–µ–≤–∞–Ω–∏ –æ–±–ª–∏–∫ —ò–µ {1}",
          format            : "d.m.y"
       });
    }

    if(Ext.form.field.ComboBox){
       Ext.apply(Ext.form.field.ComboBox.prototype, {
          loadingText       : "–£—á–∏—Ç–∞–≤–∞–º...",
          valueNotFoundText : undefined
       });
    }

    if(Ext.form.field.VTypes){
       Ext.apply(Ext.form.field.VTypes, {
          emailText    : '–û–≤–æ –ø–æ—ô–µ –ø—Ä–∏—Ö–≤–∞—Ç–∞ e-mail –∞–¥—Ä–µ—?—É –∏—?–∫—ô—É—á–∏–≤–æ —É –æ–±–ª–∏–∫—É "korisnik@domen.com"',
          urlText      : '–û–≤–æ –ø–æ—ô–µ –ø—Ä–∏—Ö–≤–∞—Ç–∞ URL –∞–¥—Ä–µ—?—É –∏—?–∫—ô—É—á–∏–≤–æ —É –æ–±–ª–∏–∫—É "http:/'+'/www.domen.com"',
          alphaText    : '–û–≤–æ –ø–æ—ô–µ –º–æ–∂–µ —?–∞–¥—Ä–∂–∞—Ç–∏ –∏—?–∫—ô—É—á–∏–≤–æ —?–ª–æ–≤–∞ –∏ –∑–Ω–∞–∫ _',
          alphanumText : '–û–≤–æ –ø–æ—ô–µ –º–æ–∂–µ —?–∞–¥—Ä–∂–∞—Ç–∏ —?–∞–º–æ —?–ª–æ–≤–∞, –±—Ä–æ—ò–µ–≤–µ –∏ –∑–Ω–∞–∫ _'
       });
    }

    if(Ext.grid.header.Container){
       Ext.apply(Ext.grid.header.Container.prototype, {
          sortAscText  : "–†–∞—?—Ç—É—õ–∏ —Ä–µ–¥–æ—?–ª–µ–¥",
          sortDescText : "–û–ø–∞–¥–∞—ò—É—õ–∏ —Ä–µ–¥–æ—?–ª–µ–¥",
          lockText     : "–ó–∞–∫—ô—É—á–∞—ò –∫–æ–ª–æ–Ω—É",
          unlockText   : "–û—Ç–∫—ô—É—á–∞—ò –∫–æ–ª–æ–Ω—É",
          columnsText  : "–ö–æ–ª–æ–Ω–µ"
       });
    }

    if(Ext.grid.PropertyColumnModel){
       Ext.apply(Ext.grid.PropertyColumnModel.prototype, {
          nameText   : "–?–∞–∑–∏–≤",
          valueText  : "–í—Ä–µ–¥–Ω–æ—?—Ç",
          dateFormat : "d.m.Y"
       });
    }

    if(Ext.layout.BorderLayout && Ext.layout.BorderLayout.SplitRegion){
       Ext.apply(Ext.layout.BorderLayout.SplitRegion.prototype, {
          splitTip            : "–ü–æ–≤—É—õ–∏ –∑–∞ –∏–∑–º–µ–Ω—É –≤–µ–ª–∏—á–∏–Ω–µ.",
          collapsibleSplitTip : "–ü–æ–≤—É—õ–∏ –∑–∞ –∏–∑–º–µ–Ω—É –≤–µ–ª–∏—á–∏–Ω–µ. –î–≤–æ—?—Ç—Ä—É–∫–∏ –∫–ª–∏–∫ –∑–∞ —?–∞–∫—Ä–∏–≤–∞—ö–µ."
       });
    }
});