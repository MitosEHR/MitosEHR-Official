/*!
 * Extensible 1.5.0
 * Copyright(c) 2010-2011 Extensible, LLC
 * licensing@ext.ensible.com
 * http://ext.ensible.com
 */
/*!
 * Extensible 1.5.0
 * Copyright(c) 2010-2011 Extensible, LLC
 * licensing@ext.ensible.com
 * http://ext.ensible.com
 */
Ôªø/**
 * Russian translation
 * By ZooKeeper (utf-8 encoding)
 * 6 November 2007
 */
Ext.onReady(function() {
    if(Ext.Updater) {
        Ext.Updater.defaults.indicatorText = '<div class="loading-indicator">–ò–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∞...</div>';
    }

    if(Ext.view.View){
        Ext.view.View.prototype.emptyText = "";
    }

    if(Ext.grid.Panel){
        Ext.grid.Panel.prototype.ddText = "{0} –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —?—Ç—Ä–æ–∫";
    }

    if(Ext.TabPanelItem){
        Ext.TabPanelItem.prototype.closeText = "–ó–∞–∫—Ä—ã—Ç—å —?—Ç—É –≤–∫–ª–∞–¥–∫—É";
    }

    if(Ext.form.field.Base){
        Ext.form.field.Base.prototype.invalidText = "–ó–Ω–∞—á–µ–Ω–∏–µ –≤ —?—Ç–æ–º –ø–æ–ª–µ –Ω–µ–≤–µ—Ä–Ω–æ–µ";
    }

    if(Ext.LoadMask){
        Ext.LoadMask.prototype.msg = "–ó–∞–≥—Ä—É–∑–∫–∞...";
    }

    if(Ext.Date){
        Ext.Date.monthNames = [
        "–Ø–Ω–≤–∞—Ä—å",
        "–§–µ–≤—Ä–∞–ª—å",
        "–ú–∞—Ä—Ç",
        "–?–ø—Ä–µ–ª—å",
        "–ú–∞–π",
        "–ò—é–Ω—å",
        "–ò—é–ª—å",
        "–?–≤–≥—É—?—Ç",
        "–°–µ–Ω—Ç—?–±—Ä—å",
        "–û–∫—Ç—?–±—Ä—å",
        "–?–æ—?–±—Ä—å",
        "–î–µ–∫–∞–±—Ä—å"
        ];

        Ext.Date.shortMonthNames = [
        "–Ø–Ω–≤",
        "–§–µ–≤—Ä",
        "–ú–∞—Ä—Ç",
        "–?–ø—Ä",
        "–ú–∞–π",
        "–ò—é–Ω—å",
        "–ò—é–ª—å",
        "–?–≤–≥",
        "–°–µ–Ω—Ç",
        "–û–∫—Ç",
        "–?–æ—?–±",
        "–î–µ–∫"
        ];

        Ext.Date.getShortMonthName = function(month) {
            return Ext.Date.shortMonthNames[month];
        };

        Ext.Date.monthNumbers = {
            '–Ø–Ω–≤': 0,
            '–§–µ–≤': 1,
            '–ú–∞—Ä': 2,
            '–?–ø—Ä': 3,
            '–ú–∞–π': 4,
            '–ò—é–Ω': 5,
            '–ò—é–ª': 6,
            '–?–≤–≥': 7,
            '–°–µ–Ω': 8,
            '–û–∫—Ç': 9,
            '–?–æ—?': 10,
            '–î–µ–∫': 11
        };

        Ext.Date.getMonthNumber = function(name) {
            return Ext.Date.monthNumbers[name.substring(0, 1).toUpperCase() + name.substring(1, 3).toLowerCase()];
        };

        Ext.Date.dayNames = [
        "–í–æ—?–∫—Ä–µ—?–µ–Ω—å–µ",
        "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫",
        "–í—Ç–æ—Ä–Ω–∏–∫",
        "–°—Ä–µ–¥–∞",
        "–ß–µ—Ç–≤–µ—Ä–≥",
        "–ü—?—Ç–Ω–∏—Ü–∞",
        "–°—É–±–±–æ—Ç–∞"
        ];

        Ext.Date.getShortDayName = function(day) {
            return Ext.Date.dayNames[day].substring(0, 3);
        };
    }
    if(Ext.MessageBox){
        Ext.MessageBox.buttonText = {
            ok     : "OK",
            cancel : "–û—Ç–º–µ–Ω–∞",
            yes    : "–î–∞",
            no     : "–?–µ—Ç"
        };
    }

    if(Ext.util.Format){
        Ext.apply(Ext.util.Format, {
            thousandSeparator: '.',
            decimalSeparator: ',',
            currencySign: '\u0440\u0443\u0431',  // Russian Ruble
            dateFormat: 'd.m.Y'
        });
    }

    if(Ext.picker.Date){
        Ext.apply(Ext.picker.Date.prototype, {
            todayText          : "–°–µ–≥–æ–¥–Ω—?",
            minText            : "–≠—Ç–∞ –¥–∞—Ç–∞ —Ä–∞–Ω—å—à–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –¥–∞—Ç—ã",
            maxText            : "–≠—Ç–∞ –¥–∞—Ç–∞ –ø–æ–∑–∂–µ –º–∞–∫—?–∏–º–∞–ª—å–Ω–æ–π –¥–∞—Ç—ã",
            disabledDaysText   : "",
            disabledDatesText  : "",
            monthNames         : Ext.Date.monthNames,
            dayNames           : Ext.Date.dayNames,
            nextText           : '–°–ª–µ–¥—É—é—â–∏–π –º–µ—?—?—Ü (Control+–í–ø—Ä–∞–≤–æ)',
            prevText           : '–ü—Ä–µ–¥—ã–¥—É—â–∏–π –º–µ—?—?—Ü (Control+–í–ª–µ–≤–æ)',
            monthYearText      : '–í—ã–±–æ—Ä –º–µ—?—?—Ü–∞ (Control+–í–≤–µ—Ä—Ö/–í–Ω–∏–∑ –¥–ª—? –≤—ã–±–æ—Ä–∞ –≥–æ–¥–∞)',
            todayTip           : "{0} (–ü—Ä–æ–±–µ–ª)",
            format             : "d.m.y",
            startDay           : 1
        });
    }

    if(Ext.picker.Month) {
        Ext.apply(Ext.picker.Month.prototype, {
            okText             : "&#160;OK&#160;",
            cancelText         : "–û—Ç–º–µ–Ω–∞"
        });
    }

    if(Ext.toolbar.Paging){
        Ext.apply(Ext.PagingToolbar.prototype, {
            beforePageText : "–°—Ç—Ä–∞–Ω–∏—Ü–∞",
            afterPageText  : "–∏–∑ {0}",
            firstText      : "–ü–µ—Ä–≤–∞—? —?—Ç—Ä–∞–Ω–∏—Ü–∞",
            prevText       : "–ü—Ä–µ–¥—ã–¥—É—â–∞—? —?—Ç—Ä–∞–Ω–∏—Ü–∞",
            nextText       : "–°–ª–µ–¥—É—é—â–∞—? —?—Ç—Ä–∞–Ω–∏—Ü–∞",
            lastText       : "–ü–æ—?–ª–µ–¥–Ω—?—? —?—Ç—Ä–∞–Ω–∏—Ü–∞",
            refreshText    : "–û–±–Ω–æ–≤–∏—Ç—å",
            displayMsg     : "–û—Ç–æ–±—Ä–∞–∂–∞—é—Ç—?—? –∑–∞–ø–∏—?–∏ —? {0} –ø–æ {1}, –≤—?–µ–≥–æ {2}",
            emptyMsg       : '–?–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—? –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—?'
        });
    }

    if(Ext.form.field.Text){
        Ext.apply(Ext.form.field.Text.prototype, {
            minLengthText : "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—? –¥–ª–∏–Ω–∞ —?—Ç–æ–≥–æ –ø–æ–ª—? {0}",
            maxLengthText : "–ú–∞–∫—?–∏–º–∞–ª—å–Ω–∞—? –¥–ª–∏–Ω–∞ —?—Ç–æ–≥–æ –ø–æ–ª—? {0}",
            blankText     : "–≠—Ç–æ –ø–æ–ª–µ –æ–±—?–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—? –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—?",
            regexText     : "",
            emptyText     : null
        });
    }

    if(Ext.form.field.Number){
        Ext.apply(Ext.form.field.Number.prototype, {
            minText : "–ó–Ω–∞—á–µ–Ω–∏–µ —?—Ç–æ–≥–æ –ø–æ–ª—? –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ {0}",
            maxText : "–ó–Ω–∞—á–µ–Ω–∏–µ —?—Ç–æ–≥–æ –ø–æ–ª—? –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ {0}",
            nanText : "{0} –Ω–µ —?–≤–ª—?–µ—Ç—?—? —á–∏—?–ª–æ–º"
        });
    }

    if(Ext.form.field.Date){
        Ext.apply(Ext.form.field.Date.prototype, {
            disabledDaysText  : "–?–µ –¥–æ—?—Ç—É–ø–Ω–æ",
            disabledDatesText : "–?–µ –¥–æ—?—Ç—É–ø–Ω–æ",
            minText           : "–î–∞—Ç–∞ –≤ —?—Ç–æ–º –ø–æ–ª–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–∑–¥–µ {0}",
            maxText           : "–î–∞—Ç–∞ –≤ —?—Ç–æ–º –ø–æ–ª–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ä–∞–Ω—å—à–µ {0}",
            invalidText       : "{0} –Ω–µ —?–≤–ª—?–µ—Ç—?—? –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∞—Ç–æ–π - –¥–∞—Ç–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —É–∫–∞–∑–∞–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ {1}",
            format            : "d.m.y",
            altFormats        : "d.m.y|d/m/Y|d-m-y|d-m-Y|d/m|d-m|dm|dmy|dmY|d|Y-m-d"
        });
    }

    if(Ext.form.field.ComboBox){
        Ext.apply(Ext.form.field.ComboBox.prototype, {
            loadingText       : "–ó–∞–≥—Ä—É–∑–∫–∞...",
            valueNotFoundText : undefined
        });
    }

    if(Ext.form.field.VTypes){
        Ext.apply(Ext.form.field.VTypes, {
            emailText     : '–≠—Ç–æ –ø–æ–ª–µ –¥–æ–ª–∂–Ω–æ —?–æ–¥–µ—Ä–∂–∞—Ç—å –∞–¥—Ä–µ—? —?–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ "user@example.com"',
            urlText       : '–≠—Ç–æ –ø–æ–ª–µ –¥–æ–ª–∂–Ω–æ —?–æ–¥–µ—Ä–∂–∞—Ç—å URL –≤ —Ñ–æ—Ä–º–∞—Ç–µ "http:/'+'/www.example.com"',
            alphaText     : '–≠—Ç–æ –ø–æ–ª–µ –¥–æ–ª–∂–Ω–æ —?–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –ª–∞—Ç–∏–Ω—?–∫–∏–µ –±—É–∫–≤—ã –∏ —?–∏–º–≤–æ–ª –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—? "_"',
            alphanumText  : '–≠—Ç–æ –ø–æ–ª–µ –¥–æ–ª–∂–Ω–æ —?–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –ª–∞—Ç–∏–Ω—?–∫–∏–µ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã –∏ —?–∏–º–≤–æ–ª –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—? "_"'
        });
    }

    if(Ext.form.field.HtmlEditor){
        Ext.apply(Ext.form.field.HtmlEditor.prototype, {
            createLinkText : '–ü–æ–∂–∞–ª—É–π—?—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—?:',
            buttonTips : {
                bold : {
                    title: '–ü–æ–ª—É–∂–∏—Ä–Ω—ã–π (Ctrl+B)',
                    text: '–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø–æ–ª—É–∂–∏—Ä–Ω–æ–≥–æ –Ω–∞—á–µ—Ä—Ç–∞–Ω–∏—? –∫ –≤—ã–¥–µ–ª–µ–Ω–Ω–æ–º—É —Ç–µ–∫—?—Ç—É.',
                    cls: Ext.baseCSSPrefix + 'html-editor-tip'
                },
                italic : {
                    title: '–ö—É—Ä—?–∏–≤ (Ctrl+I)',
                    text: '–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∫—É—Ä—?–∏–≤–Ω–æ–≥–æ –Ω–∞—á–µ—Ä—Ç–∞–Ω–∏—? –∫ –≤—ã–¥–µ–ª–µ–Ω–Ω–æ–º—É —Ç–µ–∫—?—Ç—É.',
                    cls: Ext.baseCSSPrefix + 'html-editor-tip'
                },
                underline : {
                    title: '–ü–æ–¥—á—ë—Ä–∫–Ω—É—Ç—ã–π (Ctrl+U)',
                    text: '–ü–æ–¥—á—ë—Ä–∫–∏–≤–∞–Ω–∏–µ –≤—ã–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—?—Ç–∞.',
                    cls: Ext.baseCSSPrefix + 'html-editor-tip'
                },
                increasefontsize : {
                    title: '–£–≤–µ–ª–∏—á–∏—Ç—å —Ä–∞–∑–º–µ—Ä',
                    text: '–£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ —à—Ä–∏—Ñ—Ç–∞.',
                    cls: Ext.baseCSSPrefix + 'html-editor-tip'
                },
                decreasefontsize : {
                    title: '–£–º–µ–Ω—å—à–∏—Ç—å —Ä–∞–∑–º–µ—Ä',
                    text: '–£–º–µ–Ω—å—à–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ —à—Ä–∏—Ñ—Ç–∞.',
                    cls: Ext.baseCSSPrefix + 'html-editor-tip'
                },
                backcolor : {
                    title: '–ó–∞–ª–∏–≤–∫–∞',
                    text: '–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ —Ñ–æ–Ω–∞ –¥–ª—? –≤—ã–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—?—Ç–∞ –∏–ª–∏ –∞–±–∑–∞—Ü–∞.',
                    cls: Ext.baseCSSPrefix + 'html-editor-tip'
                },
                forecolor : {
                    title: '–¶–≤–µ—Ç —Ç–µ–∫—?—Ç–∞',
                    text: '–ò–∑–º–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ —Ç–µ–∫—?—Ç–∞.',
                    cls: Ext.baseCSSPrefix + 'html-editor-tip'
                },
                justifyleft : {
                    title: '–í—ã—Ä–æ–≤–Ω—?—Ç—å —Ç–µ–∫—?—Ç –ø–æ –ª–µ–≤–æ–º—É –∫—Ä–∞—é',
                    text: '–í—ã—Ä–æ–≤–Ω–∏–≤–∞–Ω–∏–µ —Ç–µ–∫—?—Ç–∞ –ø–æ –ª–µ–≤–æ–º—É –∫—Ä–∞—é.',
                    cls: Ext.baseCSSPrefix + 'html-editor-tip'
                },
                justifycenter : {
                    title: '–ü–æ —Ü–µ–Ω—Ç—Ä—É',
                    text: '–í—ã—Ä–æ–≤–Ω–∏–≤–∞–Ω–∏–µ —Ç–µ–∫—?—Ç–∞ –ø–æ —Ü–µ–Ω—Ç—Ä—É.',
                    cls: Ext.baseCSSPrefix + 'html-editor-tip'
                },
                justifyright : {
                    title: '–í—ã—Ä–æ–≤–Ω—?—Ç—å —Ç–µ–∫—?—Ç –ø–æ –ø—Ä–∞–≤–æ–º—É –∫—Ä–∞—é',
                    text: '–í—ã—Ä–æ–≤–Ω–∏–≤–∞–Ω–∏–µ —Ç–µ–∫—?—Ç–∞ –ø–æ –ø—Ä–∞–≤–æ–º—É –∫—Ä–∞—é.',
                    cls: Ext.baseCSSPrefix + 'html-editor-tip'
                },
                insertunorderedlist : {
                    title: '–ú–∞—Ä–∫–µ—Ä—ã',
                    text: '–?–∞—á–∞—Ç—å –º–∞—Ä–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —?–ø–∏—?–æ–∫.',
                    cls: Ext.baseCSSPrefix + 'html-editor-tip'
                },
                insertorderedlist : {
                    title: '–?—É–º–µ—Ä–∞—Ü–∏—?',
                    text: '–?–∞—á–∞—Ç—å –Ω—É–º–µ—Ä–Ω–æ–≤–∞–Ω–Ω—ã–π —?–ø–∏—?–æ–∫.',
                    cls: Ext.baseCSSPrefix + 'html-editor-tip'
                },
                createlink : {
                    title: '–í—?—Ç–∞–≤–∏—Ç—å –≥–∏–ø–µ—Ä—?—?—ã–ª–∫—É',
                    text: '–°–æ–∑–¥–∞–Ω–∏–µ —?—?—ã–ª–∫–∏ –∏–∑ –≤—ã–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—?—Ç–∞.',
                    cls: Ext.baseCSSPrefix + 'html-editor-tip'
                },
                sourceedit : {
                    title: '–ò—?—Ö–æ–¥–Ω—ã–π –∫–æ–¥',
                    text: '–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—?—? –Ω–∞ –∏—?—Ö–æ–¥–Ω—ã–π –∫–æ–¥.',
                    cls: Ext.baseCSSPrefix + 'html-editor-tip'
                }
            }
        });
    }

    if(Ext.form.Basic){
        Ext.form.Basic.prototype.waitTitle = "–ü–æ–∂–∞–ª—É–π—?—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ...";
    }

    if(Ext.grid.header.Container){
        Ext.apply(Ext.grid.header.Container.prototype, {
            sortAscText  : "–°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ –≤–æ–∑—Ä–∞—?—Ç–∞–Ω–∏—é",
            sortDescText : "–°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ —É–±—ã–≤–∞–Ω–∏—é",
            lockText     : "–ó–∞–∫—Ä–µ–ø–∏—Ç—å —?—Ç–æ–ª–±–µ—Ü",
            unlockText   : "–°–Ω—?—Ç—å –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ —?—Ç–æ–ª–±—Ü–∞",
            columnsText  : "–°—Ç–æ–ª–±—Ü—ã"
        });
    }

    if(Ext.grid.GroupingFeature){
        Ext.apply(Ext.grid.GroupingFeature.prototype, {
            emptyGroupText : '(–ü—É—?—Ç–æ)',
            groupByText    : '–ì—Ä—É–ø–ø–∏—Ä–æ–≤–∞—Ç—å –ø–æ —?—Ç–æ–º—É –ø–æ–ª—é',
            showGroupsText : '–û—Ç–æ–±—Ä–∞–∂–∞—Ç—å –ø–æ –≥—Ä—É–ø–ø–∞–º'
        });
    }

    if(Ext.grid.PropertyColumnModel){
        Ext.apply(Ext.grid.PropertyColumnModel.prototype, {
            nameText   : "–?–∞–∑–≤–∞–Ω–∏–µ",
            valueText  : "–ó–Ω–∞—á–µ–Ω–∏–µ",
            dateFormat : "d.m.Y"
        });
    }

    if(Ext.SplitLayoutRegion){
        Ext.apply(Ext.SplitLayoutRegion.prototype, {
            splitTip            : "–¢—?–Ω–∏—Ç–µ –¥–ª—? –∏–∑–º–µ–Ω–µ–Ω–∏—? —Ä–∞–∑–º–µ—Ä–∞.",
            collapsibleSplitTip : "–¢—?–Ω–∏—Ç–µ –¥–ª—? –∏–∑–º–µ–Ω–µ–Ω–∏—? —Ä–∞–∑–º–µ—Ä–∞. –î–≤–æ–π–Ω–æ–π —â–µ–ª—á–æ–∫ —?–ø—Ä—?—á–µ—Ç –ø–∞–Ω–µ–ª—å."
        });
    }

    if(Ext.layout.BorderLayout && Ext.layout.BorderLayout.SplitRegion){
        Ext.apply(Ext.layout.BorderLayout.SplitRegion.prototype, {
            splitTip            : "–¢—?–Ω–∏—Ç–µ –¥–ª—? –∏–∑–º–µ–Ω–µ–Ω–∏—? —Ä–∞–∑–º–µ—Ä–∞.",
            collapsibleSplitTip : "–¢—?–Ω–∏—Ç–µ –¥–ª—? –∏–∑–º–µ–Ω–µ–Ω–∏—? —Ä–∞–∑–º–µ—Ä–∞. –î–≤–æ–π–Ω–æ–π —â–µ–ª—á–æ–∫ —?–ø—Ä—?—á–µ—Ç –ø–∞–Ω–µ–ª—å."
        });
    }
});