/*!
 * Extensible 1.5.0
 * Copyright(c) 2010-2011 Extensible, LLC
 * licensing@ext.ensible.com
 * http://ext.ensible.com
 */
/*!
 * Extensible 1.5.0
 * Copyright(c) 2010-2011 Extensible, LLC
 * licensing@ext.ensible.com
 * http://ext.ensible.com
 */
/**
 * Greek translation
 * By thesilentman (utf8 encoding)
 * 27 Apr 2008
 *
 * Changes since previous (second) Version:
 * + added Ext.Date.shortMonthNames 
 * + added Ext.Date.getShortMonthName 
 * + added Ext.Date.monthNumbers
 * + added Ext.grid.GroupingFeature
 */
Ext.onReady(function() {
    if(Ext.Updater){
        Ext.Updater.defaults.indicatorText = '<div class="loading-indicator">ÎœÎµÏ„Î±Ï†ÏŒÏ?Ï„Ï‰ÏƒÎ· Î´ÎµÎ´Î¿Î¼Î­Î½Ï‰Î½...</div>';
    }
    
    if(Ext.view.View){
        Ext.view.View.prototype.emptyText = "";
    }

    if(Ext.grid.Panel){
        Ext.grid.Panel.prototype.ddText = "{0} Î•Ï€Î¹Î»ÎµÎ³Î¼Î­Î½ÎµÏ‚ ÏƒÎµÎ¹Ï?Î­Ï‚";
    }

    if(Ext.TabPanelItem){
        Ext.TabPanelItem.prototype.closeText = "ÎšÎ»ÎµÎ¯ÏƒÏ„Îµ Ï„Î¿ tab";
    }

    if(Ext.form.field.Base){
        Ext.form.field.Base.prototype.invalidText = "Î¤Î¿ Ï€ÎµÏ?Î¹ÎµÏ‡ÏŒÎ¼ÎµÎ½Î¿ Ï„Î¿Ï… Ï€ÎµÎ´Î¯Î¿Ï… Î´ÎµÎ½ ÎµÎ¯Î½Î±Î¹ Î±Ï€Î¿Î´ÎµÎºÏ„ÏŒ";
    }

    if(Ext.LoadMask){
        Ext.LoadMask.prototype.msg = "ÎœÎµÏ„Î±Ï†ÏŒÏ?Ï„Ï‰ÏƒÎ· Î´ÎµÎ´Î¿Î¼Î­Î½Ï‰Î½...";
    }

    if(Ext.Date){
        Ext.Date.monthNames = [
        "Î™Î±Î½Î¿Ï…Î¬Ï?Î¹Î¿Ï‚",
        "Î¦ÎµÎ²Ï?Î¿Ï…Î¬Ï?Î¹Î¿Ï‚",
        "ÎœÎ¬Ï?Ï„Î¹Î¿Ï‚",
        "Î‘Ï€Ï?Î¯Î»Î¹Î¿Ï‚",
        "ÎœÎ¬Î¹Î¿Ï‚",
        "Î™Î¿Ï?Î½Î¹Î¿Ï‚",
        "Î™Î¿Ï?Î»Î¹Î¿Ï‚",
        "Î‘Ï?Î³Î¿Ï…ÏƒÏ„Î¿Ï‚",
        "Î£ÎµÏ€Ï„Î­Î¼Î²Ï?Î¹Î¿Ï‚",
        "ÎŸÎºÏ„ÏŽÎ²Ï?Î¹Î¿Ï‚",
        "Î?Î¿Î­Î¼Î²Ï?Î¹Î¿Ï‚",
        "Î”ÎµÎºÎ­Î¼Î²Ï?Î¹Î¿Ï‚"
        ];

        Ext.Date.shortMonthNames = [
        "Î™Î±Î½",
        "Î¦ÎµÎ²",
        "ÎœÎ¬Ï?",
        "Î‘Ï€Ï?",
        "ÎœÎ¬Î¹",
        "Î™Î¿Ï?",
        "Î™Î¿Ï?",
        "Î‘Ï?Î³",
        "Î£ÎµÏ€",
        "ÎŸÎºÏ„",
        "Î?Î¿Î­",
        "Î”ÎµÎº"
        ];

        Ext.Date.getShortMonthName = function(month) {
            return Ext.Date.monthNames[month].substring(0, 3);
        };

        Ext.Date.monthNumbers = {
            Jan : 0,
            Feb : 1,
            Mar : 2,
            Apr : 3,
            May : 4,
            Jun : 5,
            Jul : 6,
            Aug : 7,
            Sep : 8,
            Oct : 9,
            Nov : 10,
            Dec : 11
        };

        Ext.Date.getMonthNumber = function(name) {
            return Ext.Date.monthNumbers[name.substring(0, 1).toUpperCase() + name.substring(1, 3).toLowerCase()];
        };


        Ext.Date.dayNames = [
        "ÎšÏ…Ï?Î¹Î±ÎºÎ®",
        "Î”ÎµÏ…Ï„Î­Ï?Î±",
        "Î¤Ï?Î¯Ï„Î·",
        "Î¤ÎµÏ„Î¬Ï?Ï„Î·",
        "Î Î­Î¼Ï€Ï„Î·",
        "Î Î±Ï?Î±ÏƒÎºÎµÏ…Î®",
        "Î£Î¬Î²Î²Î±Ï„Î¿"
        ];
    }
    
    if(Ext.MessageBox){
        Ext.MessageBox.buttonText = {
            ok     : "OK",
            cancel : "Î†ÎºÏ…Ï?Î¿",
            yes    : "Î?Î±Î¹",
            no     : "ÎŒÏ‡Î¹"
        };
    }

    if(Ext.util.Format){
        Ext.apply(Ext.util.Format, {
            thousandSeparator: '.',
            decimalSeparator: ',',
            currencySign: '\u20ac',  // Greek Euro
            dateFormat: 'd/m/Y'
        });
    }

    if(Ext.picker.Date){
        Ext.apply(Ext.picker.Date.prototype, {
            todayText         : "Î£Î®Î¼ÎµÏ?Î±",
            minText           : "Î— Î—Î¼ÎµÏ?Î¿Î¼Î·Î½Î¯Î± ÎµÎ¯Î½Î±Î¹ Ï€Ï?Î¿Î³ÎµÎ½Î­ÏƒÏ„ÎµÏ?Î· Î±Ï€ÏŒ Ï„Î·Î½ Ï€Î±Î»Î±Î¹ÏŒÏ„ÎµÏ?Î· Î±Ï€Î¿Î´ÎµÎºÏ„Î®",
            maxText           : "Î— Î—Î¼ÎµÏ?Î¿Î¼Î·Î½Î¯Î± ÎµÎ¯Î½Î±Î¹ Î¼ÎµÏ„Î±Î³ÎµÎ½Î­ÏƒÏ„ÎµÏ?Î· Î±Ï€ÏŒ Ï„Î·Î½ Î½ÎµÏŒÏ„ÎµÏ?Î· Î±Ï€Î¿Î´ÎµÎºÏ„Î®",
            disabledDaysText  : "",
            disabledDatesText : "",
            monthNames  : Ext.Date.monthNames,
            dayNames    : Ext.Date.dayNames,
            nextText          : 'Î•Ï€ÏŒÎ¼ÎµÎ½Î¿Ï‚ ÎœÎ®Î½Î±Ï‚ (Control+Î”ÎµÎ¾Î¯ Î’Î­Î»Î¿Ï‚)',
            prevText          : 'Î Ï?Î¿Î·Î³Î¿Ï?Î¼ÎµÎ½Î¿Ï‚ ÎœÎ®Î½Î±Ï‚ (Control + Î‘Ï?Î¹ÏƒÏ„ÎµÏ?ÏŒ Î’Î­Î»Î¿Ï‚)',
            monthYearText     : 'Î•Ï€Î¹Î»Î¿Î³Î® ÎœÎ·Î½ÏŒÏ‚ (Control + Î•Ï€Î¬Î½Ï‰/ÎšÎ¬Ï„Ï‰ Î’Î­Î»Î¿Ï‚ Î³Î¹Î± Î¼ÎµÏ„Î±Î²Î¿Î»Î® ÎµÏ„ÏŽÎ½)',
            todayTip          : "{0} (Î Î›Î®ÎºÏ„Ï?Î¿ Î”Î¹Î±ÏƒÏ„Î®Î¼Î±Ï„Î¿Ï‚)",
            format            : "d/m/y"
        });
    }

    if(Ext.toolbar.Paging){
        Ext.apply(Ext.PagingToolbar.prototype, {
            beforePageText : "Î£ÎµÎ»Î¯Î´Î±",
            afterPageText  : "Î±Ï€ÏŒ {0}",
            firstText      : "Î Ï?ÏŽÏ„Î· Î£ÎµÎ»Î¯Î´Î±",
            prevText       : "Î Ï?Î¿Î·Î³Î¿Ï?Î¼ÎµÎ½Î· Î£ÎµÎ»Î¯Î´Î±",
            nextText       : "Î•Ï€ÏŒÎ¼ÎµÎ½Î· Î£ÎµÎ»Î¯Î´Î±",
            lastText       : "Î¤ÎµÎ»ÎµÏ…Ï„Î±Î¯Î± Î£ÎµÎ»Î¯Î´Î±",
            refreshText    : "Î‘Î½Î±Î½Î­Ï‰ÏƒÎ·",
            displayMsg     : "Î•Î¼Ï†Î¬Î½Î¹ÏƒÎ· {0} - {1} Î±Ï€ÏŒ {2}",
            emptyMsg       : 'Î”ÎµÎ½ Ï…Ï€Î¬Ï?Ï‡Î¿Ï…Î½ Î´ÎµÎ´Î¿Î¼Î­Î½Î±'
        });
    }

    if(Ext.form.field.Text){
        Ext.apply(Ext.form.field.Text.prototype, {
            minLengthText : "Î¤Î¿ Î¼Î¹ÎºÏ?ÏŒÏ„ÎµÏ?Î¿ Î±Ï€Î¿Î´ÎµÎºÏ„ÏŒ Î¼Î®ÎºÎ¿Ï‚ Î³Î¹Î± Ï„Î¿ Ï€ÎµÎ´Î¯Î¿ ÎµÎ¯Î½Î±Î¹ {0}",
            maxLengthText : "Î¤Î¿ Î¼ÎµÎ³Î±Î»Ï?Ï„ÎµÏ?Î¿ Î±Ï€Î¿Î´ÎµÎºÏ„ÏŒ Î¼Î®ÎºÎ¿Ï‚ Î³Î¹Î± Ï„Î¿ Ï€ÎµÎ´Î¯Î¿ ÎµÎ¯Î½Î±Î¹ {0}",
            blankText     : "Î¤Î¿ Ï€ÎµÎ´Î¯Î¿ ÎµÎ¯Î½Î±Î¹ Ï…Ï€Î¿Ï‡Ï?ÎµÏ‰Ï„Î¹ÎºÏŒ",
            regexText     : "",
            emptyText     : null
        });
    }

    if(Ext.form.field.Number){
        Ext.apply(Ext.form.field.Number.prototype, {
            minText : "Î— Î¼Î¹ÎºÏ?ÏŒÏ„ÎµÏ?Î· Ï„Î¹Î¼Î® Ï„Î¿Ï… Ï€ÎµÎ´Î¯Î¿Ï… ÎµÎ¯Î½Î±Î¹ {0}",
            maxText : "Î— Î¼ÎµÎ³Î±Î»Ï?Ï„ÎµÏ?Î· Ï„Î¹Î¼Î® Ï„Î¿Ï… Ï€ÎµÎ´Î¯Î¿Ï… ÎµÎ¯Î½Î±Î¹ {0}",
            nanText : "{0} Î´ÎµÎ½ ÎµÎ¯Î½Î±Î¹ Î±Ï€Î¿Î´ÎµÎºÏ„ÏŒÏ‚ Î±Ï?Î¹Î¸Î¼ÏŒÏ‚"
        });
    }

    if(Ext.form.field.Date){
        Ext.apply(Ext.form.field.Date.prototype, {
            disabledDaysText  : "Î‘Î½ÎµÎ½ÎµÏ?Î³ÏŒ",
            disabledDatesText : "Î‘Î½ÎµÎ½ÎµÏ?Î³ÏŒ",
            minText           : "Î— Î·Î¼ÎµÏ?Î¿Î¼Î·Î½Î¯Î± Î±Ï…Ï„Î¿Ï? Ï„Î¿Ï… Ï€ÎµÎ´Î¯Î¿Ï… Ï€Ï?Î­Ï€ÎµÎ¹ Î½Î± ÎµÎ¯Î½Î±Î¹ Î¼ÎµÏ„Î¬ Ï„Î·Î½ {0}",
            maxText           : "Î— Î·Î¼ÎµÏ?Î¿Î¼Î·Î½Î¯Î± Î±Ï…Ï„Î¿Ï? Ï„Î¿Ï… Ï€ÎµÎ´Î¯Î¿Ï… Ï€Ï?Î­Ï€ÎµÎ¹ Î½Î± ÎµÎ¯Î½Î±Î¹ Ï€Ï?Î¹Î½ Ï„Î·Î½ {0}",
            invalidText       : "{0} Î´ÎµÎ½ ÎµÎ¯Î½Î±Î¹ Î­Î³ÎºÏ…Ï?Î· Î·Î¼ÎµÏ?Î¿Î¼Î·Î½Î¯Î± - Ï€Ï?Î­Ï€ÎµÎ¹ Î½Î± ÎµÎ¯Î½Î±Î¹ ÏƒÏ„Î· Î¼Î¿Ï?Ï†Î® {1}",
            format            : "d/m/y"
        });
    }

    if(Ext.form.field.ComboBox){
        Ext.apply(Ext.form.field.ComboBox.prototype, {
            loadingText       : "ÎœÎµÏ„Î±Ï†ÏŒÏ?Ï„Ï‰ÏƒÎ· Î´ÎµÎ´Î¿Î¼Î­Î½Ï‰Î½...",
            valueNotFoundText : undefined
        });
    }

    if(Ext.form.field.VTypes){
        Ext.apply(Ext.form.field.VTypes, {
            emailText    : 'Î¤Î¿ Ï€ÎµÎ´Î¯Î¿ Î´Î­Ï‡ÎµÏ„Î±Î¹ Î¼ÏŒÎ½Î¿ Î´Î¹ÎµÏ…Î¸Ï?Î½ÏƒÎµÎ¹Ï‚ Email ÏƒÎµ Î¼Î¿Ï?Ï†Î® "user@example.com"',
            urlText      : 'Î¤Î¿ Ï€ÎµÎ´Î¯Î¿ Î´Î­Ï‡ÎµÏ„Î±Î¹ Î¼ÏŒÎ½Î¿ URL ÏƒÎµ Î¼Î¿Ï?Ï†Î® "http:/'+'/www.example.com"',
            alphaText    : 'Î¤Î¿ Ï€ÎµÎ´Î¯Î¿ Î´Î­Ï‡ÎµÏ„Î±Î¹ Î¼ÏŒÎ½Î¿ Ï‡Î±Ï?Î±ÎºÏ„Î®Ï?ÎµÏ‚ ÎºÎ±Î¹ _',
            alphanumText : 'Î¤Î¿ Ï€ÎµÎ´Î¯Î¿ Î´Î­Ï‡ÎµÏ„Î±Î¹ Î¼ÏŒÎ½Î¿ Ï‡Î±Ï?Î±ÎºÏ„Î®Ï?ÎµÏ‚, Î±Ï?Î¹Î¸Î¼Î¿Ï?Ï‚ ÎºÎ±Î¹ _'
        });
    }

    if(Ext.form.field.HtmlEditor){
        Ext.apply(Ext.form.field.HtmlEditor.prototype, {
            createLinkText : 'Î”ÏŽÏƒÏ„Îµ Ï„Î· Î´Î¹ÎµÏ?Î¸Ï…Î½ÏƒÎ· (URL) Î³Î¹Î± Ï„Î¿ ÏƒÏ?Î½Î´ÎµÏƒÎ¼Î¿ (link):',
            buttonTips : {
                bold : {
                    title: 'ÎˆÎ½Ï„Î¿Î½Î± (Ctrl+B)',
                    text: 'ÎšÎ¬Î½ÎµÏ„Îµ Ï„Î¿ Ï€Ï?Î¿ÎµÏ€Î¹Î»ÎµÎ³Î¼Î­Î½Î¿ ÎºÎµÎ¯Î¼ÎµÎ½Î¿ Î­Î½Ï„Î¿Î½Î¿.',
                    cls: Ext.baseCSSPrefix + 'html-editor-tip'
                },
                italic : {
                    title: 'Î Î»Î¬Î³Î¹Î± (Ctrl+I)',
                    text: 'ÎšÎ¬Î½ÎµÏ„Îµ Ï„Î¿ Ï€Ï?Î¿ÎµÏ€Î¹Î»ÎµÎ³Î¼Î­Î½Î¿ ÎºÎµÎ¯Î¼ÎµÎ½Î¿ Ï€Î»Î¬Î³Î¹Î¿.',
                    cls: Ext.baseCSSPrefix + 'html-editor-tip'
                },
                underline : {
                    title: 'Î¥Ï€Î¿Î³Ï?Î¬Î¼Î¼Î¹ÏƒÎ· (Ctrl+U)',
                    text: 'Î¥Ï€Î¿Î³Ï?Î±Î¼Î¼Î¯Î¶ÎµÏ„Îµ Ï„Î¿ Ï€Ï?Î¿ÎµÏ€Î¹Î»ÎµÎ³Î¼Î­Î½Î¿ ÎºÎµÎ¯Î¼ÎµÎ½Î¿.',
                    cls: Ext.baseCSSPrefix + 'html-editor-tip'
                },
                increasefontsize : {
                    title: 'ÎœÎµÎ³Î­Î¸Ï…Î½ÏƒÎ· ÎºÎµÎ¹Î¼Î­Î½Î¿Ï…',
                    text: 'ÎœÎµÎ³Î±Î»ÏŽÎ½ÎµÏ„Îµ Ï„Î· Î³Ï?Î±Î¼Î¼Î±Ï„Î¿ÏƒÎµÎ¹Ï?Î¬.',
                    cls: Ext.baseCSSPrefix + 'html-editor-tip'
                },
                decreasefontsize : {
                    title: 'Î£Î¼Î¯ÎºÏ?Ï…Î½ÏƒÎ· ÎºÎµÎ¹Î¼Î­Î½Î¿Ï…',
                    text: 'ÎœÎ¹ÎºÏ?Î±Î¯Î½ÎµÏ„Îµ Ï„Î· Î³Ï?Î±Î¼Î¼Î±Ï„Î¿ÏƒÎµÎ¹Ï?Î¬.',
                    cls: Ext.baseCSSPrefix + 'html-editor-tip'
                },
                backcolor : {
                    title: 'Î§Ï?ÏŽÎ¼Î± Î¦ÏŒÎ½Ï„Î¿Ï… ÎšÎµÎ¹Î¼Î­Î½Î¿Ï…',
                    text: 'Î‘Î»Î»Î¬Î¶ÎµÏ„Îµ Ï„Î¿ Ï‡Ï?ÏŽÎ¼Î± ÏƒÏ„Î¿ Ï†ÏŒÎ½Ï„Î¿ Ï„Î¿Ï… Ï€Ï?Î¿ÎµÏ€Î¹Î»ÎµÎ³Î¼Î­Î½Î¿Ï… ÎºÎµÎ¹Î¼Î­Î½Î¿Ï….',
                    cls: Ext.baseCSSPrefix + 'html-editor-tip'
                },
                forecolor : {
                    title: 'Î§Ï?ÏŽÎ¼Î± Î“Ï?Î±Î¼Î¼Î±Ï„Î¿ÏƒÎµÎ¹Ï?Î¬Ï‚',
                    text: 'Î‘Î»Î»Î¬Î¶ÎµÏ„Îµ Ï„Î¿ Ï‡Ï?ÏŽÎ¼Î± ÏƒÏ„Î· Î³Ï?Î±Î¼Î¼Î±Ï„Î¿ÏƒÎµÎ¹Ï?Î¬ Ï„Î¿Ï… Ï€Ï?Î¿ÎµÏ€Î¹Î»ÎµÎ³Î¼Î­Î½Î¿Ï… ÎºÎµÎ¹Î¼Î­Î½Î¿Ï….',               
                    cls: Ext.baseCSSPrefix + 'html-editor-tip'
                },
                justifyleft : {
                    title: 'Î‘Ï?Î¹ÏƒÏ„ÎµÏ?Î® Î£Ï„Î¿Î¯Ï‡Î¹ÏƒÎ· ÎšÎµÎ¹Î¼Î­Î½Î¿Ï…',
                    text: 'Î£Ï„Î¿Î¹Ï‡Î¯Î¶ÎµÏ„Îµ Ï„Î¿ ÎºÎµÎ¯Î¼ÎµÎ½Î¿ ÏƒÏ„Î± Î±Ï?Î¹ÏƒÏ„ÎµÏ?Î¬.',
                    cls: Ext.baseCSSPrefix + 'html-editor-tip'
                },
                justifycenter : {
                    title: 'ÎšÎµÎ½Ï„Ï?Î¬Ï?Î¹ÏƒÎ¼Î± ÎšÎµÎ¹Î¼Î­Î½Î¿Ï…',
                    text: 'Î£Ï„Î¿Î¹Ï‡Î¯Î¶ÎµÏ„Îµ Ï„Î¿ ÎºÎµÎ¯Î¼ÎµÎ½Î¿ ÏƒÏ„Î¿ ÎºÎ­Î½Ï„Ï?Î¿.',
                    cls: Ext.baseCSSPrefix + 'html-editor-tip'
                },
                justifyright : {
                    title: 'Î”ÎµÎ¾Î¹Î¬ Î£Ï„Î¿Î¯Ï‡Î¹ÏƒÎ· ÎšÎµÎ¹Î¼Î­Î½Î¿Ï…',
                    text: 'Î£Ï„Î¿Î¹Ï‡Î¯Î¶ÎµÏ„Îµ Ï„Î¿ ÎºÎµÎ¯Î¼ÎµÎ½Î¿ ÏƒÏ„Î± Î´ÎµÎ¾Î¹Î¬.',
                    cls: Ext.baseCSSPrefix + 'html-editor-tip'
                },
                insertunorderedlist : {
                    title: 'Î•Î¹ÏƒÎ±Î³Ï‰Î³Î® Î›Î¯ÏƒÏ„Î±Ï‚ ÎšÎ¿Ï…ÎºÎ¯Î´Ï‰Î½',
                    text: 'ÎžÎµÎºÎ¹Î½Î®ÏƒÏ„Îµ Î¼Î¹Î± Î»Î¯ÏƒÏ„Î± Î¼Îµ ÎºÎ¿Ï…ÎºÎ¯Î´ÎµÏ‚.',
                    cls: Ext.baseCSSPrefix + 'html-editor-tip'
                },
                insertorderedlist : {
                    title: 'Î•Î¹ÏƒÎ±Î³Ï‰Î³Î® Î›Î¯ÏƒÏ„Î±Ï‚ Î‘Ï?Î¯Î¸Î¼Î·ÏƒÎ·Ï‚',
                    text: 'ÎžÎµÎºÎ¹Î½Î®ÏƒÏ„Îµ Î¼Î¹Î± Î»Î¯ÏƒÏ„Î± Î¼Îµ Î±Ï?Î¯Î¸Î¼Î·ÏƒÎ·.',
                    cls: Ext.baseCSSPrefix + 'html-editor-tip'
                },
                createlink : {
                    title: 'Hyperlink',
                    text: 'ÎœÎµÏ„Î±Ï„Ï?Î­Ï€ÎµÏ„Îµ Ï„Î¿ Ï€Ï?Î¿ÎµÏ€Î¹Î»ÎµÎ³Î¼Î­Î½Î¿ ÎºÎµÎ¯Î¼ÎµÎ½Î¿ ÏƒÎµ Link.',
                    cls: Ext.baseCSSPrefix + 'html-editor-tip'
                },
                sourceedit : {
                    title: 'Î•Ï€ÎµÎ¾ÎµÏ?Î³Î±ÏƒÎ¯Î± ÎšÏŽÎ´Î¹ÎºÎ±',
                    text: 'ÎœÎµÏ„Î±Î²Î±Î¯Î½ÎµÏ„Îµ ÏƒÏ„Î· Î»ÎµÎ¹Ï„Î¿Ï…Ï?Î³Î¯Î± ÎµÏ€ÎµÎ¾ÎµÏ?Î³Î±ÏƒÎ¯Î±Ï‚ ÎºÏŽÎ´Î¹ÎºÎ±.',
                    cls: Ext.baseCSSPrefix + 'html-editor-tip'
                }
            }
        });
    }


    if(Ext.grid.header.Container){
        Ext.apply(Ext.grid.header.Container.prototype, {
            sortAscText  : "Î‘Ï?Î¾Î¿Ï…ÏƒÎ± Ï„Î±Î¾Î¹Î½ÏŒÎ¼Î·ÏƒÎ·",
            sortDescText : "Î¦Î¸Î¯Î½Î¿Ï…ÏƒÎ± Ï„Î±Î¾Î¹Î½ÏŒÎ¼Î·ÏƒÎ·",
            lockText     : "ÎšÎ»ÎµÎ¯Î´Ï‰Î¼Î± ÏƒÏ„Î®Î»Î·Ï‚",
            unlockText   : "ÎžÎµÎºÎ»ÎµÎ¯Î´Ï‰Î¼Î± ÏƒÏ„Î®Î»Î·Ï‚",
            columnsText  : "Î£Ï„Î®Î»ÎµÏ‚"
        });
    }

    if(Ext.grid.GroupingFeature){
        Ext.apply(Ext.grid.GroupingFeature.prototype, {
            emptyGroupText : '(ÎšÎ±Î¼Î¼Î¯Î±)',
            groupByText    : 'ÎŸÎ¼Î±Î´Î¿Ï€Î¿Î¯Î·ÏƒÎ· Î²Î¬ÏƒÎµÎ¹ Î±Ï…Ï„Î¿Ï? Ï„Î¿Ï… Ï€ÎµÎ´Î¯Î¿Ï…',
            showGroupsText : 'Î?Î± ÎµÎ¼Ï†Î±Î½Î¯Î¶ÎµÏ„Î±Î¹ ÏƒÏ„Î¹Ï‚ Î¿Î¼Î¬Î´ÎµÏ‚'
        });
    }

    if(Ext.grid.PropertyColumnModel){
        Ext.apply(Ext.grid.PropertyColumnModel.prototype, {
            nameText   : "ÎŒÎ½Î¿Î¼Î±",
            valueText  : "Î ÎµÏ?Î¹ÎµÏ‡ÏŒÎ¼ÎµÎ½Î¿",
            dateFormat : "d/m/Y"
        });
    }

    if(Ext.layout.BorderLayout && Ext.layout.BorderLayout.SplitRegion){
        Ext.apply(Ext.layout.BorderLayout.SplitRegion.prototype, {
            splitTip            : "Î£Ï?Ï?ÎµÏ„Îµ Î³Î¹Î± Î±Î»Î»Î±Î³Î® Î¼ÎµÎ³Î­Î¸Î¿Ï…Ï‚.",
            collapsibleSplitTip : "Î£Ï?Ï?ÎµÏ„Îµ Î³Î¹Î± Î±Î»Î»Î±Î³Î® Î¼ÎµÎ³Î­Î¸Î¿Ï…Ï‚. Î”Î¹Ï€Î»ÏŒ ÎºÎ»Î¹Îº Î³Î¹Î± Î±Ï€ÏŒÎºÏ?Ï…ÏˆÎ·."
        });
    }
});
