/*!
 * Extensible 1.5.0
 * Copyright(c) 2010-2011 Extensible, LLC
 * licensing@ext.ensible.com
 * http://ext.ensible.com
 */
/*!
 * Extensible 1.5.0
 * Copyright(c) 2010-2011 Extensible, LLC
 * licensing@ext.ensible.com
 * http://ext.ensible.com
 */
/**
 * Bulgarian Translation
 *
 * By –ì–µ–æ—Ä–≥–∏ –ö–æ—?—Ç–∞–¥–∏–Ω–æ–≤, –ö–∞–ª–≥–∞—Ä–∏, –ö–∞–Ω–∞–¥–∞
 * 10 October 2007
 * By Nedko Penev 
 * 26 October 2007
 *
 * (utf-8 encoding)
 */
Ext.onReady(function() {
    if (Ext.Updater) {
        Ext.Updater.defaults.indicatorText = '<div class="loading-indicator">–ó–∞—Ä–µ–∂–¥–∞–Ω–µ...</div>';
    }
    if(Ext.view.View){
      Ext.view.View.prototype.emptyText = "";
    }

    if(Ext.grid.Panel){
      Ext.grid.Panel.prototype.ddText = "{0} –∏–∑–±—Ä–∞–Ω–∏ –∫–æ–ª–æ–Ω–∏";
    }

    if(Ext.TabPanelItem){
      Ext.TabPanelItem.prototype.closeText = "–ó–∞—Ç–≤–æ—Ä–∏ —Ç–∞–±";
    }

    if(Ext.form.field.Base){
      Ext.form.field.Base.prototype.invalidText = "–?–µ–≤–∞–ª–∏–¥–Ω–∞ —?—Ç–æ–π–Ω–æ—?—Ç –Ω–∞ –ø–æ–ª–µ—Ç–æ";
    }

    if(Ext.LoadMask){
      Ext.LoadMask.prototype.msg = "–ó–∞—Ä–µ–∂–¥–∞–Ω–µ...";
    }

    if(Ext.Date) {
        Ext.Date.monthNames = [
          "–Ø–Ω—É–∞—Ä–∏",
          "–§–µ–≤—Ä—É–∞—Ä–∏",
          "–ú–∞—Ä—Ç",
          "–?–ø—Ä–∏–ª",
          "–ú–∞–π",
          "–Æ–Ω–∏",
          "–Æ–ª–∏",
          "–?–≤–≥—É—?—Ç",
          "–°–µ–ø—Ç–µ–º–≤—Ä–∏",
          "–û–∫—Ç–æ–º–≤—Ä–∏",
          "–?–æ–µ–º–≤—Ä–∏",
          "–î–µ–∫–µ–º–≤—Ä–∏"
        ];

        Ext.Date.monthNumbers = {
          Jan : 0,
          Feb : 1,
          Mar : 2,
          Apr : 3,
          May : 4,
          Jun : 5,
          Jul : 6,
          Aug : 7,
          Sep : 8,
          Oct : 9,
          Nov : 10,
          Dec : 11
        };

        Ext.Date.dayNames = [
          "–?–µ–¥–µ–ª—?",
          "–ü–æ–Ω–µ–¥–µ–ª–Ω–∏–∫",
          "–í—Ç–æ—Ä–Ω–∏–∫",
          "–°—Ä—?–¥–∞",
          "–ß–µ—Ç–≤—ä—Ä—Ç—ä–∫",
          "–ü–µ—Ç—ä–∫",
          "–°—ä–±–æ—Ç–∞"
        ];
    }
    if(Ext.MessageBox){
      Ext.MessageBox.buttonText = {
        ok     : "OK",
        cancel : "–û—Ç–º–µ–Ω–∏",
        yes    : "–î–∞",
        no     : "–?–µ"
      };
    }

    if(Ext.util.Format){
        Ext.apply(Ext.util.Format, {
            thousandSeparator: '.',
            decimalSeparator: ',',
            currencySign: '\u043b\u0432',  // Bulgarian Leva
            dateFormat: 'd.m.Y'
        });
    }

    if(Ext.picker.Date){
      Ext.apply(Ext.picker.Date.prototype, {
        todayText         : "–î–Ω–µ—?",
        minText           : "–¢–∞–∑–∏ –¥–∞—Ç–∞ –µ –ø—Ä–µ–¥–∏ –º–∏–Ω–∏–º–∞–ª–Ω–∞—Ç–∞",
        maxText           : "–¢–∞–∑–∏ –¥–∞—Ç–∞ –µ —?–ª–µ–¥ –º–∞–∫—?–∏–º–∞–ª–Ω–∞—Ç–∞",
        disabledDaysText  : "",
        disabledDatesText : "",
        monthNames        : Ext.Date.monthNames,
        dayNames          : Ext.Date.dayNames,
        nextText          : '–°–ª–µ–¥–≤–∞—â –º–µ—?–µ—Ü (Control+Right)',
        prevText          : '–ü—Ä–µ–¥–∏—à–µ–Ω –º–µ—?–µ—Ü (Control+Left)',
        monthYearText     : '–ò–∑–±–µ—Ä–∏ –º–µ—?–µ—Ü (Control+Up/Down –∑–∞ –ø—Ä–µ–º–µ—?—Ç–≤–∞–Ω–µ –ø–æ –≥–æ–¥–∏–Ω–∏)',
        todayTip          : "{0} (Spacebar)",
        format            : "d.m.y",
        startDay          : 1
      });
    }

    if(Ext.picker.Month) {
      Ext.apply(Ext.picker.Month.prototype, {
          okText            : "&#160;OK&#160;",
          cancelText        : "–û—Ç–º–µ–Ω–∏"
      });
    }

    if(Ext.toolbar.Paging){
      Ext.apply(Ext.PagingToolbar.prototype, {
        beforePageText : "–°—Ç—Ä–∞–Ω–∏—Ü–∞",
        afterPageText  : "–æ—Ç {0}",
        firstText      : "–ü—ä—Ä–≤–∞ —?—Ç—Ä–∞–Ω–∏—Ü–∞",
        prevText       : "–ü—Ä–µ–¥–∏—à–Ω–∞ —?—Ç—Ä–∞–Ω–∏—Ü–∞",
        nextText       : "–°–ª–µ–¥–≤–∞—â–∞ —?—Ç—Ä–∞–Ω–∏—Ü–∞",
        lastText       : "–ü–æ—?–ª–µ–¥–Ω–∞ —?—Ç—Ä–∞–Ω–∏—Ü–∞",
        refreshText    : "–ü—Ä–µ–∑–∞—Ä–µ–¥–∏",
        displayMsg     : "–ü–æ–∫–∞–∑–≤–∞–π–∫–∏ {0} - {1} –æ—Ç {2}",
        emptyMsg       : '–?—?–º–∞ –¥–∞–Ω–Ω–∏ –∑–∞ –ø–æ–∫–∞–∑–≤–∞–Ω–µ'
      });
    }

    if(Ext.form.field.Text){
      Ext.apply(Ext.form.field.Text.prototype, {
        minLengthText : "–ú–∏–Ω–∏–º–∞–ª–Ω–∞—Ç–∞ –¥—ä–ª–∂–∏–Ω–∞ –Ω–∞ —Ç–æ–≤–∞ –ø–æ–ª–µ –µ {0}",
        maxLengthText : "–ú–∞–∫—?–∏–º–∞–ª–Ω–∞—Ç–∞ –¥—ä–ª–∂–∏–Ω–∞ –Ω–∞ —Ç–æ–≤–∞ –ø–æ–ª–µ –µ {0}",
        blankText     : "–¢–æ–≤–∞ –ø–æ–ª–µ –µ –∑–∞–¥—ä–ª–∂–∏—Ç–µ–ª–Ω–æ",
        regexText     : "",
        emptyText     : null
      });
    }

    if(Ext.form.field.Number){
      Ext.apply(Ext.form.field.Number.prototype, {
        minText : "–ú–∏–Ω–∏–º–∞–ª–Ω–∞—Ç–∞ —?—Ç–æ–π–Ω–æ—?—Ç –∑–∞ —Ç–æ–≤–∞ –ø–æ–ª–µ –µ {0}",
        maxText : "–ú–∞–∫—?–∏–º–∞–ª–Ω–∞—Ç–∞ —?—Ç–æ–π–Ω–æ—?—Ç –∑–∞ —Ç–æ–≤–∞ –ø–æ–ª–µ –µ {0}",
        nanText : "{0} –Ω–µ –µ –≤–∞–ª–∏–¥–Ω–æ —á–∏—?–ª–æ"
      });
    }

    if(Ext.form.field.Date){
      Ext.apply(Ext.form.field.Date.prototype, {
        disabledDaysText  : "–?–µ–¥–æ—?—Ç—ä–ø–µ–Ω",
        disabledDatesText : "–?–µ–¥–æ—?—Ç—ä–ø–µ–Ω",
        minText           : "–î–∞—Ç–∞—Ç–∞ –≤ —Ç–æ–≤–∞ –ø–æ–ª–µ —Ç—Ä—?–±–≤–∞ –¥–∞ –µ —?–ª–µ–¥ {0}",
        maxText           : "–î–∞—Ç–∞—Ç–∞ –≤ —Ç–æ–≤–∞ –ø–æ–ª–µ —Ç—Ä—?–±–≤–∞ –¥–∞ –µ –ø—Ä–µ–¥–∏ {0}",
        invalidText       : "{0} –Ω–µ –µ –≤–∞–ª–∏–¥–Ω–∞ –¥–∞—Ç–∞ - —Ç—Ä—?–±–≤–∞ –¥–∞ –±—ä–¥–µ –≤—ä–≤ —Ñ–æ—Ä–º–∞—Ç {1}",
        format            : "d.m.y",
        altFormats        : "d.m.y|d/m/Y|d-m-y|d-m-Y|d/m|d-m|dm|dmy|dmY|d|Y-m-d"
      });
    }

    if(Ext.form.field.ComboBox){
      Ext.apply(Ext.form.field.ComboBox.prototype, {
        loadingText       : "–ó–∞—Ä–µ–∂–¥–∞–Ω–µ...",
        valueNotFoundText : undefined
      });
    }

    if(Ext.form.field.VTypes){
      Ext.apply(Ext.form.field.VTypes, {
        emailText    : '–¢–æ–≤–∞ –ø–æ–ª–µ —Ç—Ä—?–±–≤–∞ –¥–∞ –±—ä–¥–µ –µ–º–µ–π–ª –≤—ä–≤ —Ñ–æ—Ä–º–∞—Ç "user@example.com"',
        urlText      : '–¢–æ–≤–∞ –ø–æ–ª–µ —Ç—Ä—?–±–≤–∞ –¥–∞ –±—ä–¥–µ URL –≤—ä–≤ —Ñ–æ—Ä–º–∞—Ç "http:/'+'/www.example.com"',
        alphaText    : '–¢–æ–≤–∞ –ø–æ–ª–µ —Ç—Ä—?–±–≤–∞ –¥–∞ —?—ä–¥—ä—Ä–∂–∞ —?–∞–º–æ –±—É–∫–≤–∏ –∏ _',
        alphanumText : '–¢–æ–≤–∞ –ø–æ–ª–µ —Ç—Ä—?–±–≤–∞ –¥–∞ —?—ä–¥—ä—Ä–∂–∞ —?–∞–º–æ –±—É–∫–≤–∏, —Ü–∏—Ñ—Ä–∏ –∏ _'
      });
    }

    if(Ext.form.field.HtmlEditor){
      Ext.apply(Ext.form.field.HtmlEditor.prototype, {
        createLinkText : '–ú–æ–ª—?, –≤—ä–≤–µ–¥–µ—Ç–µ URL –∑–∞ –≤—Ä—ä–∑–∫–∞—Ç–∞:',
        buttonTips : {
          bold : {
            title: 'Bold (Ctrl+B)',
            text: '–£–¥–µ–±–µ–ª—?–≤–∞ –∏–∑–±—Ä–∞–Ω–∏—? —Ç–µ–∫—?—Ç.',
            cls: Ext.baseCSSPrefix + 'html-editor-tip'
          },
          italic : {
            title: 'Italic (Ctrl+I)',
            text: '–ü—Ä–∞–≤–∏ –∏–∑–±—Ä–∞–Ω–∏—? —Ç–µ–∫—?—Ç –∫—É—Ä—?–∏–≤.',
            cls: Ext.baseCSSPrefix + 'html-editor-tip'
          },
          underline : {
            title: 'Underline (Ctrl+U)',
            text: '–ü–æ–¥—á–µ—Ä—Ç–∞–≤–∞ –∏–∑–±—Ä–∞–Ω–∏—? —Ç–µ–∫—?—Ç.',
            cls: Ext.baseCSSPrefix + 'html-editor-tip'
          },
          increasefontsize : {
            title: '–£–≥–æ–ª–µ–º–∏ —Ç–µ–∫—?—Ç–∞',
            text: '–£–≥–æ–ª–µ–º—?–≤–∞ —Ä–∞–∑–º–µ—Ä–∞ –Ω–∞ —à—Ä–∏—Ñ—Ç–∞.',
            cls: Ext.baseCSSPrefix + 'html-editor-tip'
          },
          decreasefontsize : {
            title: '–?–∞–º–∞–ª–∏ —Ç–µ–∫—?—Ç–∞',
            text: '–?–∞–º–∞–ª—?–≤–∞ —Ä–∞–∑–º–µ—Ä–∞ –Ω–∞ —à—Ä–∏—Ñ—Ç–∞.',
            cls: Ext.baseCSSPrefix + 'html-editor-tip'
          },
          backcolor : {
            title: '–¶–≤—?—Ç –Ω–∞ –º–∞—Ä–∫–∏—Ä–∞–Ω–∏—? —Ç–µ–∫—?—Ç',
            text: '–ü—Ä–æ–º–µ–Ω—? —Ñ–æ–Ω–æ–≤–∏—? —Ü–≤—?—Ç –Ω–∞ –∏–∑–±—Ä–∞–Ω–∏—? —Ç–µ–∫—?—Ç.',
            cls: Ext.baseCSSPrefix + 'html-editor-tip'
          },
          forecolor : {
            title: '–¶–≤—?—Ç –Ω–∞ —à—Ä–∏—Ñ—Ç–∞',
            text: '–ü—Ä–æ–º–µ–Ω—? —Ü–≤–µ—Ç–∞ –Ω–∞ –∏–∑–±—Ä–∞–Ω–∏—? —Ç–µ–∫—?—Ç.',
            cls: Ext.baseCSSPrefix + 'html-editor-tip'
          },
          justifyleft : {
            title: '–õ—?–≤–æ –ø–æ–¥—Ä–∞–≤–Ω—?–≤–∞–Ω–µ',
            text: '–ü–æ–¥—Ä–∞–≤–Ω—?–≤–∞ —Ç–µ–∫—?—Ç–∞ –Ω–∞ –ª—?–≤–æ.',
            cls: Ext.baseCSSPrefix + 'html-editor-tip'
          },
          justifycenter : {
            title: '–¶–µ–Ω—Ç—Ä–∏—Ä–∞–Ω–µ',
            text: '–¶–µ–Ω—Ç—Ä–∏—Ä–∞ —Ç–µ–∫—?—Ç–∞.',
            cls: Ext.baseCSSPrefix + 'html-editor-tip'
          },
          justifyright : {
            title: '–î—?—?–Ω–æ –ø–æ–¥—Ä–∞–≤–Ω—?–≤–∞–Ω–µ',
            text: '–ü–æ–¥—Ä–∞–≤–Ω—?–≤–∞ —Ç–µ–∫—?—Ç–∞ –Ω–∞ –¥—?—?–Ω–æ.',
            cls: Ext.baseCSSPrefix + 'html-editor-tip'
          },
          insertunorderedlist : {
            title: '–?–µ–Ω–æ–º–µ—Ä–∏—Ä–∞–Ω —?–ø–∏—?—ä–∫',
            text: '–ó–∞–ø–æ—á–≤–∞ –Ω–µ–Ω–æ–º–µ—Ä–∏—Ä–∞–Ω —?–ø–∏—?—ä–∫.',
            cls: Ext.baseCSSPrefix + 'html-editor-tip'
          },
          insertorderedlist : {
            title: '–?–æ–º–µ—Ä–∏—Ä–∞–Ω —?–ø–∏—?—ä–∫',
            text: '–ó–∞–ø–æ—á–≤–∞ –Ω–æ–º–µ—Ä–∏—Ä–∞–Ω —?–ø–∏—?—ä–∫.',
            cls: Ext.baseCSSPrefix + 'html-editor-tip'
          },
          createlink : {
            title: '–•–∏–ø–µ—Ä–≤—Ä—ä–∑–∫–∞',
            text: '–ü—Ä–µ–≤—Ä—ä—â–∞ –∏–∑–±—Ä–∞–Ω–∏—? —Ç–µ–∫—?—Ç –≤ —Ö–∏–ø–µ—Ä–≤—Ä—ä–∑–∫–∞.',
            cls: Ext.baseCSSPrefix + 'html-editor-tip'
          },
          sourceedit : {
            title: '–†–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –∫–æ–¥–∞',
            text: '–ü—Ä–µ–º–∏–Ω–∞–≤–∞–Ω–µ –≤ —Ä–µ–∂–∏–º –Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –∫–æ–¥–∞.',
            cls: Ext.baseCSSPrefix + 'html-editor-tip'
          }
        }
      });
    }

    if(Ext.grid.header.Container){
      Ext.apply(Ext.grid.header.Container.prototype, {
        sortAscText  : "–ü–æ–¥—Ä–µ–¥–∏ –≤ –Ω–∞—Ä–∞—?—Ç–≤–∞—â —Ä–µ–¥",
        sortDescText : "–ü–æ–¥—Ä–µ–¥–∏ –≤ –Ω–∞–º–∞–ª—?–≤–∞—â —Ä–µ–¥",
        lockText     : "–ó–∞–∫–ª—é—á–∏ –∫–æ–ª–æ–Ω–∞",
        unlockText   : "–û—Ç–∫–ª—é—á–∏ –∫–æ–ª–æ–Ω–∞",
        columnsText  : "–ö–æ–ª–æ–Ω–∏"
      });
    }

    if(Ext.grid.PropertyColumnModel){
      Ext.apply(Ext.grid.PropertyColumnModel.prototype, {
        nameText   : "–ò–º–µ",
        valueText  : "–°—Ç–æ–π–Ω–æ—?—Ç",
        dateFormat : "d.m.Y"
      });
    }

    if(Ext.layout.BorderLayout && Ext.layout.BorderLayout.SplitRegion){
      Ext.apply(Ext.layout.BorderLayout.SplitRegion.prototype, {
        splitTip            : "–í–ª–∞—á–µ—Ç–µ —? –º–∏—à–∫–∞—Ç–∞ –∑–∞ –¥–∞ –ø—Ä–æ–º–µ–Ω–∏—Ç–µ —Ä–∞–∑–º–µ—Ä–∞.",
        collapsibleSplitTip : "–í–ª–∞—á–µ—Ç–µ —? –º–∏—à–∫–∞—Ç–∞ –∑–∞ –¥–∞ –ø—Ä–æ–º–µ–Ω–∏—Ç–µ —Ä–∞–∑–º–µ—Ä–∞. –ß—É–∫–Ω–µ—Ç–µ –¥–≤–∞ –ø—ä—Ç–∏ –∑–∞ –¥–∞ —?–∫—Ä–∏–µ—Ç–µ."
      });
    }

});