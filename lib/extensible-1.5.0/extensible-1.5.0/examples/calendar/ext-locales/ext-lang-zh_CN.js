/*!
 * Extensible 1.5.0
 * Copyright(c) 2010-2011 Extensible, LLC
 * licensing@ext.ensible.com
 * http://ext.ensible.com
 */
/*!
 * Extensible 1.5.0
 * Copyright(c) 2010-2011 Extensible, LLC
 * licensing@ext.ensible.com
 * http://ext.ensible.com
 */
/**
 * Simplified Chinese translation
 * By DavidHu
 * 09 April 2007
 * 
 * update by andy_ghg
 * 2009-10-22 15:00:57
 */
Ext.onReady(function(){
    if(Ext.Updater){
        Ext.Updater.defaults.indicatorText = '<div class="loading-indicator">åŠ è½½ä¸­...</div>';
    }

    if(Ext.view.View){
       Ext.view.View.prototype.emptyText = "";
    }

    if(Ext.grid.Panel){
       Ext.grid.Panel.prototype.ddText = "é€‰æ‹©äº† {0} è¡Œ";
    }

    if(Ext.TabPanelItem){
       Ext.TabPanelItem.prototype.closeText = "å…³é—­æ­¤æ ‡ç­¾";
    }

    if(Ext.form.field.Base){
       Ext.form.field.Base.prototype.invalidText = "è¾“å…¥å€¼é?žæ³•";
    }

    if (Ext.LoadMask) {
        Ext.LoadMask.prototype.msg = "è¯»å?–ä¸­...";
    }

    if(Ext.Date){
        Ext.Date.monthNames = [
           "ä¸€æœˆ",
           "äºŒæœˆ",
           "ä¸‰æœˆ",
           "å››æœˆ",
           "äº”æœˆ",
           "å…­æœˆ",
           "ä¸ƒæœˆ",
           "å…«æœˆ",
           "ä¹?æœˆ",
           "å??æœˆ",
           "å??ä¸€æœˆ",
           "å??äºŒæœˆ"
        ];

        Ext.Date.dayNames = [
           "æ—¥",
           "ä¸€",
           "äºŒ",
           "ä¸‰",
           "å››",
           "äº”",
           "å…­"
        ];

        Ext.Date.formatCodes.a = "(this.getHours() < 12 ? 'ä¸Šå?ˆ' : 'ä¸‹å?ˆ')";
        Ext.Date.formatCodes.A = "(this.getHours() < 12 ? 'ä¸Šå?ˆ' : 'ä¸‹å?ˆ')";
    }

    if(Ext.MessageBox){
       Ext.MessageBox.buttonText = {
          ok     : "ç¡®å®š",
          cancel : "å?–æ¶ˆ",
          yes    : "æ˜¯",
          no     : "å?¦"
       };
    }

    if(Ext.util.Format){
        Ext.apply(Ext.util.Format, {
            thousandSeparator: '.',
            decimalSeparator: ',',
            currencySign: '\u00a5',  // Chinese Yuan
            dateFormat: 'yå¹´mæœˆdæ—¥'
        });
    }

    if(Ext.picker.Date){
       Ext.apply(Ext.picker.Date.prototype, {
          todayText         : "ä»Šå¤©",
          minText           : "æ—¥æœŸå¿…é¡»å¤§äºŽæœ€å°?å…?è®¸æ—¥æœŸ",//update
          maxText           : "æ—¥æœŸå¿…é¡»å°?äºŽæœ€å¤§å…?è®¸æ—¥æœŸ",//update
          disabledDaysText  : "",
          disabledDatesText : "",
          monthNames        : Ext.Date.monthNames,
          dayNames          : Ext.Date.dayNames,
          nextText          : 'ä¸‹ä¸ªæœˆ (Ctrl+Right)',
          prevText          : 'ä¸Šä¸ªæœˆ (Ctrl+Left)',
          monthYearText     : 'é€‰æ‹©ä¸€ä¸ªæœˆ (Control+Up/Down æ?¥æ”¹å?˜å¹´ä»½)',//update
          todayTip          : "{0} (ç©ºæ ¼é”®é€‰æ‹©)",
          format            : "yå¹´mæœˆdæ—¥"
       });
    }

    if(Ext.picker.Month) {
      Ext.apply(Ext.picker.Month.prototype, {
          okText            : "ç¡®å®š",
          cancelText        : "å?–æ¶ˆ"
      });
    }

    if(Ext.toolbar.Paging){
       Ext.apply(Ext.PagingToolbar.prototype, {
          beforePageText : "ç¬¬",//update
          afterPageText  : "é¡µ,å…± {0} é¡µ",//update
          firstText      : "ç¬¬ä¸€é¡µ",
          prevText       : "ä¸Šä¸€é¡µ",//update
          nextText       : "ä¸‹ä¸€é¡µ",
          lastText       : "æœ€å?Žé¡µ",
          refreshText    : "åˆ·æ–°",
          displayMsg     : "æ˜¾ç¤º {0} - {1}æ?¡ï¼Œå…± {2} æ?¡",//update
          emptyMsg       : 'æ²¡æœ‰æ•°æ?®'
       });
    }

    if(Ext.form.field.Text){
       Ext.apply(Ext.form.field.Text.prototype, {
          minLengthText : "è¯¥è¾“å…¥é¡¹çš„æœ€å°?é•¿åº¦æ˜¯ {0} ä¸ªå­—ç¬¦",
          maxLengthText : "è¯¥è¾“å…¥é¡¹çš„æœ€å¤§é•¿åº¦æ˜¯ {0} ä¸ªå­—ç¬¦",
          blankText     : "è¯¥è¾“å…¥é¡¹ä¸ºå¿…è¾“é¡¹",
          regexText     : "",
          emptyText     : null
       });
    }

    if(Ext.form.field.Number){
       Ext.apply(Ext.form.field.Number.prototype, {
          minText : "è¯¥è¾“å…¥é¡¹çš„æœ€å°?å€¼æ˜¯ {0}",
          maxText : "è¯¥è¾“å…¥é¡¹çš„æœ€å¤§å€¼æ˜¯ {0}",
          nanText : "{0} ä¸?æ˜¯æœ‰æ•ˆæ•°å€¼"
       });
    }

    if(Ext.form.field.Date){
       Ext.apply(Ext.form.field.Date.prototype, {
          disabledDaysText  : "ç¦?ç”¨",
          disabledDatesText : "ç¦?ç”¨",
          minText           : "è¯¥è¾“å…¥é¡¹çš„æ—¥æœŸå¿…é¡»åœ¨ {0} ä¹‹å?Ž",
          maxText           : "è¯¥è¾“å…¥é¡¹çš„æ—¥æœŸå¿…é¡»åœ¨ {0} ä¹‹å‰?",
          invalidText       : "{0} æ˜¯æ— æ•ˆçš„æ—¥æœŸ - å¿…é¡»ç¬¦å?ˆæ ¼å¼?ï¼š {1}",
          format            : "yå¹´mæœˆdæ—¥"
       });
    }

    if(Ext.form.field.ComboBox){
       Ext.apply(Ext.form.field.ComboBox.prototype, {
          loadingText       : "åŠ è½½ä¸­...",
          valueNotFoundText : undefined
       });
    }

    if(Ext.form.field.VTypes){
       Ext.apply(Ext.form.field.VTypes, {
          emailText    : 'è¯¥è¾“å…¥é¡¹å¿…é¡»æ˜¯ç”µå­?é‚®ä»¶åœ°å?€ï¼Œæ ¼å¼?å¦‚ï¼š "user@example.com"',
          urlText      : 'è¯¥è¾“å…¥é¡¹å¿…é¡»æ˜¯URLåœ°å?€ï¼Œæ ¼å¼?å¦‚ï¼š "http:/'+'/www.example.com"',
          alphaText    : 'è¯¥è¾“å…¥é¡¹å?ªèƒ½åŒ…å?«å?Šè§’å­—æ¯?å’Œ_',//update
          alphanumText : 'è¯¥è¾“å…¥é¡¹å?ªèƒ½åŒ…å?«å?Šè§’å­—æ¯?,æ•°å­—å’Œ_'//update
       });
    }
    //add HTMLEditor's tips by andy_ghg
    if(Ext.form.field.HtmlEditor){
      Ext.apply(Ext.form.field.HtmlEditor.prototype, {
        createLinkText : 'æ·»åŠ è¶…çº§é“¾æŽ¥:',
        buttonTips : {
          bold : {
            title: 'ç²—ä½“ (Ctrl+B)',
            text: 'å°†é€‰ä¸­çš„æ–‡å­—è®¾ç½®ä¸ºç²—ä½“',
            cls: Ext.baseCSSPrefix + 'html-editor-tip'
          },
          italic : {
            title: 'æ–œä½“ (Ctrl+I)',
            text: 'å°†é€‰ä¸­çš„æ–‡å­—è®¾ç½®ä¸ºæ–œä½“',
            cls: Ext.baseCSSPrefix + 'html-editor-tip'
          },
          underline : {
            title: 'ä¸‹åˆ’çº¿ (Ctrl+U)',
            text: 'ç»™æ‰€é€‰æ–‡å­—åŠ ä¸‹åˆ’çº¿',
            cls: Ext.baseCSSPrefix + 'html-editor-tip'
          },
          increasefontsize : {
            title: 'å¢žå¤§å­—ä½“',
            text: 'å¢žå¤§å­—å?·',
            cls: Ext.baseCSSPrefix + 'html-editor-tip'
          },
          decreasefontsize : {
            title: 'ç¼©å°?å­—ä½“',
            text: 'å‡?å°?å­—å?·',
            cls: Ext.baseCSSPrefix + 'html-editor-tip'
          },
          backcolor : {
            title: 'ä»¥ä¸?å?Œé¢œè‰²çª?å‡ºæ˜¾ç¤ºæ–‡æœ¬',
            text: 'ä½¿æ–‡å­—çœ‹ä¸ŠåŽ»åƒ?æ˜¯ç”¨è?§å…‰ç¬”å?šäº†æ ‡è®°ä¸€æ ·',
            cls: Ext.baseCSSPrefix + 'html-editor-tip'
          },
          forecolor : {
            title: 'å­—ä½“é¢œè‰²',
            text: 'æ›´æ”¹å­—ä½“é¢œè‰²',
            cls: Ext.baseCSSPrefix + 'html-editor-tip'
          },
          justifyleft : {
            title: 'å·¦å¯¹é½?',
            text: 'å°†æ–‡å­—å·¦å¯¹é½?',
            cls: Ext.baseCSSPrefix + 'html-editor-tip'
          },
          justifycenter : {
            title: 'å±…ä¸­',
            text: 'å°†æ–‡å­—å±…ä¸­å¯¹é½?',
            cls: Ext.baseCSSPrefix + 'html-editor-tip'
          },
          justifyright : {
            title: 'å?³å¯¹é½?',
            text: 'å°†æ–‡å­—å?³å¯¹é½?',
            cls: Ext.baseCSSPrefix + 'html-editor-tip'
          },
          insertunorderedlist : {
            title: 'é¡¹ç›®ç¬¦å?·',
            text: 'å¼€å§‹åˆ›å»ºé¡¹ç›®ç¬¦å?·åˆ—è¡¨',
            cls: Ext.baseCSSPrefix + 'html-editor-tip'
          },
          insertorderedlist : {
            title: 'ç¼–å?·',
            text: 'å¼€å§‹åˆ›å»ºç¼–å?·åˆ—è¡¨',
            cls: Ext.baseCSSPrefix + 'html-editor-tip'
          },
          createlink : {
            title: 'è½¬æˆ?è¶…çº§é“¾æŽ¥',
            text: 'å°†æ‰€é€‰æ–‡æœ¬è½¬æ?¢æˆ?è¶…çº§é“¾æŽ¥',
            cls: Ext.baseCSSPrefix + 'html-editor-tip'
          },
          sourceedit : {
            title: 'ä»£ç ?è§†å›¾',
            text: 'ä»¥ä»£ç ?çš„å½¢å¼?å±•çŽ°æ–‡æœ¬',
            cls: Ext.baseCSSPrefix + 'html-editor-tip'
          }
        }
      });
    }


    if(Ext.grid.header.Container){
       Ext.apply(Ext.grid.header.Container.prototype, {
          sortAscText  : "æ­£åº?",//update
          sortDescText : "å€’åº?",//update
          lockText     : "é”?å®šåˆ—",//update
          unlockText   : "è§£é™¤é”?å®š",//update
          columnsText  : "åˆ—"
       });
    }

    if(Ext.grid.PropertyColumnModel){
       Ext.apply(Ext.grid.PropertyColumnModel.prototype, {
          nameText   : "å??ç§°",
          valueText  : "å€¼",
          dateFormat : "yå¹´mæœˆdæ—¥"
       });
    }

    if(Ext.layout.BorderLayout && Ext.layout.BorderLayout.SplitRegion){
       Ext.apply(Ext.layout.BorderLayout.SplitRegion.prototype, {
          splitTip            : "æ‹–åŠ¨æ?¥æ”¹å?˜å°ºå¯¸.",
          collapsibleSplitTip : "æ‹–åŠ¨æ?¥æ”¹å?˜å°ºå¯¸. å?Œå‡»éš?è—?."
       });
    }
});